[{"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\index.js":"1","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\reportWebVitals.js":"2","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\App.js":"3","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\Sidebar.js":"4","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\useToken.js":"5","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\Footer.js":"6","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\Content.js":"7","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\Header.js":"8","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\Breadcrumb.js":"9","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Login\\Login.js":"10","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\Utils.js":"11","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Product\\ViewProducts.js":"12","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Product\\EditProduct.js":"13","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Product\\Data.js":"14","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Product\\SetRule.js":"15","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Dashboard\\Dashboard.js":"16","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Company\\ViewCompany.js":"17","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Company\\AddCompany.js":"18","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Product\\AddProduct.js":"19","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Company\\EditCompany.js":"20","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\User\\AddUser.js":"21","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Rent\\ViewRents.js":"22","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\User\\ViewUsers.js":"23","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Rent\\CloseRent.js":"24","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Rent\\AddRent.js":"25","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\User\\EditUser.js":"26","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\services\\products.js":"27","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\services\\company.js":"28","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\services\\users.js":"29","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\services\\rent.js":"30","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Location\\AddLocation.js":"31","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Location\\ViewLocations.js":"32","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\services\\locations.js":"33","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Location\\EditLocation.js":"34","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Product\\SetLocation.js":"35"},{"size":529,"mtime":1613224791857,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1613218223130,"results":"38","hashOfConfig":"37"},{"size":808,"mtime":1614842338188,"results":"39","hashOfConfig":"37"},{"size":8679,"mtime":1617731213783,"results":"40","hashOfConfig":"37"},{"size":779,"mtime":1617044394223,"results":"41","hashOfConfig":"37"},{"size":321,"mtime":1613324240593,"results":"42","hashOfConfig":"37"},{"size":2783,"mtime":1617734672798,"results":"43","hashOfConfig":"37"},{"size":1667,"mtime":1616266842581,"results":"44","hashOfConfig":"37"},{"size":666,"mtime":1614501692360,"results":"45","hashOfConfig":"37"},{"size":1380,"mtime":1617044988944,"results":"46","hashOfConfig":"37"},{"size":1806,"mtime":1617048574294,"results":"47","hashOfConfig":"37"},{"size":1902,"mtime":1617734588364,"results":"48","hashOfConfig":"37"},{"size":3813,"mtime":1617567920827,"results":"49","hashOfConfig":"37"},{"size":12748,"mtime":1617567955025,"results":"50","hashOfConfig":"37"},{"size":6585,"mtime":1617567893341,"results":"51","hashOfConfig":"37"},{"size":2329,"mtime":1617045492725,"results":"52","hashOfConfig":"37"},{"size":1480,"mtime":1614755944132,"results":"53","hashOfConfig":"37"},{"size":3775,"mtime":1614755787253,"results":"54","hashOfConfig":"37"},{"size":3323,"mtime":1617730945317,"results":"55","hashOfConfig":"37"},{"size":3726,"mtime":1614756067978,"results":"56","hashOfConfig":"37"},{"size":7249,"mtime":1616945993153,"results":"57","hashOfConfig":"37"},{"size":2368,"mtime":1617568040846,"results":"58","hashOfConfig":"37"},{"size":2006,"mtime":1616855719348,"results":"59","hashOfConfig":"37"},{"size":3185,"mtime":1617568077302,"results":"60","hashOfConfig":"37"},{"size":4583,"mtime":1617568111905,"results":"61","hashOfConfig":"37"},{"size":8296,"mtime":1617472967161,"results":"62","hashOfConfig":"37"},{"size":2976,"mtime":1616332215253,"results":"63","hashOfConfig":"37"},{"size":1296,"mtime":1614777289171,"results":"64","hashOfConfig":"37"},{"size":1630,"mtime":1616855799659,"results":"65","hashOfConfig":"37"},{"size":1549,"mtime":1614777238335,"results":"66","hashOfConfig":"37"},{"size":2571,"mtime":1617733660282,"results":"67","hashOfConfig":"37"},{"size":1382,"mtime":1617733794912,"results":"68","hashOfConfig":"37"},{"size":1205,"mtime":1617734141021,"results":"69","hashOfConfig":"37"},{"size":2736,"mtime":1617734366522,"results":"70","hashOfConfig":"37"},{"size":6593,"mtime":1617734744004,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1ttcixw",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\index.js",[],["161","162"],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\reportWebVitals.js",[],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\App.js",[],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\Sidebar.js",["163","164","165","166","167"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { getIsAdmin } from '../../Utils'\r\n\r\nfunction Sidebar() {\r\n\r\n  const [pathname, setPathname] = useState(window.location.pathname);\r\n  Array.prototype.contains = function (obj) {\r\n    return this.indexOf(obj) > -1;\r\n  };\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    //setPathname(window.location.pathname);         \r\n  }, [pathname]);\r\n\r\n  function toggle(e, data) {\r\n    e.preventDefault();\r\n    console.log(data);\r\n    //console.log(window.location.pathname);\r\n    setPathname(data);\r\n    history.push({\r\n      pathname: data\r\n    });\r\n  }\r\n\r\n  function logout(e, data) {\r\n    e.preventDefault();\r\n    console.log(data);\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    //console.log(window.location.pathname);\r\n    setPathname(data);\r\n    //history.push('login');\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n\r\n    <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n      <Link to=\"/dashboard\" className=\"brand-link\">\r\n        {/*\r\n        <img src=\"/assets/dist/img/AdminLTELogo.png\"\r\n          alt=\"AdminLTE Logo\"\r\n          className=\"brand-image img-circle elevation-3\"\r\n          style={{ \"opacity\": \".8\" }} />\r\n        */}\r\n        <span className=\"brand-text font-weight-light\">Sensor Management</span>\r\n      </Link>\r\n\r\n      <div className=\"sidebar\">\r\n\r\n        <div className=\"form-inline\">\r\n          <div className=\"input-group\" data-widget=\"sidebar-search\">\r\n            <input className=\"form-control form-control-sidebar\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-sidebar\">\r\n                <i className=\"fas fa-search fa-fw\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <nav className=\"mt-2\">\r\n          <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/dashboard\" onClick={((e) => toggle(e, '/dashboard'))} className={\"nav-link \" + (pathname.match('/dashboard') ? \"active \" : \" \")}>\r\n                <i className=\"nav-icon fas fa-tachometer-alt\"></i>\r\n                <p>\r\n                  Dashboard\r\n                </p>\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item menu-close\">\r\n              <Link href=\"#\" className={\"nav-link \" + (['/AddProduct', '/ViewProducts'].contains(pathname) ? \"active\" : \"\")}>\r\n                <i className=\"nav-icon fas fa-columns\"></i>\r\n                <p>\r\n                  Sensors\r\n                <i className=\"right fas fa-angle-left\"></i>\r\n                </p>\r\n              </Link>\r\n              <ul className=\"nav nav-treeview\">\r\n                <li className=\"nav-item\" style={{ display: (getIsAdmin() == 1) ? \"show\" : \"none\" }}>\r\n                  <Link to=\"/AddProduct\" onClick={((e) => toggle(e, '/AddProduct'))} className={\"nav-link \" + (pathname.match('/AddProduct') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>Add Sensor</p>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/ViewProducts\" onClick={((e) => toggle(e, '/ViewProducts'))} className={\"nav-link \" + (pathname.match('/ViewProducts') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>View Sensors</p>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/AddLocation\" onClick={((e) => toggle(e, '/AddLocation'))} className={\"nav-link \" + (pathname.match('/AddLocation') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>Add Location</p>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/ViewLocations\" onClick={((e) => toggle(e, '/ViewLocations'))} className={\"nav-link \" + (pathname.match('/ViewLocations') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>View Locations</p>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n\r\n            <li className=\"nav-item menu-close\" style={{ display: (getIsAdmin() == 1) ? \"show\" : \"none\" }}>\r\n              <Link href=\"#\" className={\"nav-link \" + (['/AddCompany', '/ViewCompany'].contains(pathname) ? \"active\" : \"\")}>\r\n                <i className=\"nav-icon fas fa-copy\"></i>\r\n                <p>\r\n                  Company\r\n                <i className=\"right fas fa-angle-left\"></i>\r\n                </p>\r\n              </Link>\r\n              <ul className=\"nav nav-treeview\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/AddCompany\" onClick={((e) => toggle(e, '/AddCompany'))} className={\"nav-link \" + (pathname.match('/AddCompany') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>Add Company</p>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/ViewCompany\" onClick={((e) => toggle(e, '/ViewCompany'))} className={\"nav-link \" + (pathname.match('/ViewCompany') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>View Companies</p>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n\r\n            <li className=\"nav-item menu-close\" style={{ display: (getIsAdmin() == 1) ? \"show\" : \"none\" }}>\r\n              <Link href=\"#\" className={\"nav-link \" + (['/company/add', '/company/edit', '/company/index'].contains(pathname) ? \"active\" : \"\")}>\r\n                <i className=\"nav-icon fas fa-th\"></i>\r\n                <p>\r\n                  Lease Devices\r\n                <i className=\"right fas fa-angle-left\"></i>\r\n                </p>\r\n              </Link>\r\n              <ul className=\"nav nav-treeview\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/NewLease\" onClick={((e) => toggle(e, '/rent/add'))} className={\"nav-link \" + (pathname.match('/rent/add') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>New Lease</p>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/ViewLeases\" onClick={((e) => toggle(e, '/rent/index'))} className={\"nav-link \" + (pathname.match('/rent/index') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>View Leases</p>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n\r\n            <li className=\"nav-item menu-close\">\r\n              <Link href=\"#\" className={\"nav-link \" + (['/AddUser', '/ViewUsers'].contains(pathname) ? \"active\" : \"\")}>\r\n                <i className=\"nav-icon fas fa-edit\"></i>\r\n                <p>\r\n                  User Management\r\n                <i className=\"right fas fa-angle-left\"></i>\r\n                </p>\r\n              </Link>\r\n              <ul className=\"nav nav-treeview\">\r\n                <li className=\"nav-item\" style={{ display: (getIsAdmin() == 1) ? \"show\" : \"none\" }}>\r\n                  <Link to=\"/AddUser\" onClick={((e) => toggle(e, '/AddUser'))} className={\"nav-link \" + (pathname.match('/AddUser') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>Add New User</p>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/ViewUsers\" onClick={((e) => toggle(e, '/ViewUsers'))} className={\"nav-link \" + (pathname.match('/ViewUsers') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>View Users</p>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/login\" onClick={((e) => logout(e, '/login'))} className={\"nav-link \" + (pathname.match('/login') ? \"active \" : \" \")}>\r\n                <i className=\"nav-icon fa fa-share\"></i>\r\n                <p>\r\n                  Logout\r\n                </p>\r\n              </Link>\r\n            </li>\r\n\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\useToken.js",[],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\Footer.js",[],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\Content.js",["168"],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\Header.js",["169","170","171","172"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n\r\n    <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\"><i className=\"fas fa-bars\"></i></a>\r\n        </li>\r\n        <li className=\"nav-item d-none d-sm-inline-block\">\r\n          <Link to=\"/dashboard\" className=\"nav-link\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item d-none d-sm-inline-block\">\r\n          <a href=\"#\" className=\"nav-link\">Contact</a>\r\n        </li>\r\n      </ul>\r\n\r\n      <form className=\"form-inline ml-3\">\r\n        <div className=\"input-group input-group-sm\">\r\n          <input className=\"form-control form-control-navbar\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          <div className=\"input-group-append\">\r\n            <button className=\"btn btn-navbar\" type=\"submit\">\r\n              <i className=\"fas fa-search\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" data-widget=\"fullscreen\" href=\"#\" role=\"button\">\r\n            <i className=\"fas fa-expand-arrows-alt\"></i>\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" data-widget=\"control-sidebar\" data-slide=\"true\" href=\"#\" role=\"button\">\r\n            <i className=\"fas fa-th-large\"></i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\App\\Breadcrumb.js",[],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Login\\Login.js",["173","174"],"import React from 'react';\r\nimport './Login.css';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nasync function loginUser(credentials) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  }).then(data => data.json())\r\n}\r\n\r\nexport default function Login({ setToken }) {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const token = await loginUser({ username, password });\r\n    setToken(token);\r\n    console.log('handleSubmit');\r\n    window.location.replace('/Dashboard');\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>Login</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"u\" placeholder=\"Username\" required=\"required\" onChange={e => setUserName(e.target.value)} />\r\n        <input type=\"password\" name=\"p\" placeholder=\"Password\" required=\"required\" onChange={e => setPassword(e.target.value)} />\r\n        <button type=\"submit\" className=\"btn btn-primary btn-block btn-large\">Let me in.</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n}","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\Utils.js",[],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Product\\ViewProducts.js",["175","176"],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Product\\EditProduct.js",["177","178","179","180","181","182","183"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\r\nimport { getProduct, updateList, updateProduct } from '../../services/products';\r\nimport ViewProducts from './ViewProducts';\r\n\r\n\r\nfunction EditProduct({ setAlert }) {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [itemName, setItemName] = useState();\r\n    const [itemDescription, setItemDescription] = useState();\r\n    const [itemSKU, setItemSKU] = useState();\r\n    \r\n    useEffect(() => {\r\n        getProduct(id)\r\n            .then(items => {\r\n                setItemName(items.Name);\r\n                setItemDescription(items.Description);\r\n                setItemSKU(items.SKU);\r\n            })\r\n    }, []);\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewProducts/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!itemName) {\r\n            alert('please enter name');\r\n            return;\r\n        }\r\n        updateProduct(id, { itemName, itemDescription, itemSKU });\r\n        history.push(\"/ViewProducts\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card card-primary\">\r\n                        <div className=\"card-header\">\r\n                            <h3 class=\"card-title\">Edit Sensor Information</h3>\r\n                        </div>\r\n                        <form onSubmit={e => onSubmit(e)}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputName\">Sensor Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputId\" type=\"hidden\" value={id} />\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" placeholder=\"Enter Name\" name=\"name\" defaultValue={itemName}\r\n                                        onChange={event => setItemName(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Description</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Description\" name=\"description\" defaultValue={itemDescription}\r\n                                        onChange={event => setItemDescription(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputSKU\">Hardware Serial No.</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputSKU\" placeholder=\"Hardware Serial Number\" name=\"sku\" defaultValue={itemSKU}\r\n                                        onChange={event => setItemSKU(event.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditProduct;","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Product\\Data.js",["184","185","186","187","188","189","190","191","192","193","194"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\r\nimport { formatDateTime, getTemperatureUnit, convertCToF } from \"../../Utils\"\r\nimport { getProduct, getProductData, getProductDataByDate } from '../../services/products';\r\nimport DatePicker from \"react-datepicker\";\r\nimport DataTable from 'react-data-table-component';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\nimport moment from 'moment'\r\nimport $ from 'jquery';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        name: 'Name',\r\n        selector: 'Name',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Hardware Serial',\r\n        selector: 'hardware_serial',\r\n        sortable: true\r\n    },\r\n    {\r\n        name: 'Temperature (°' + getTemperatureUnit() + ')',\r\n        selector: 'temperature',\r\n        sortable: true,\r\n        right: true,\r\n        cell: row => {\r\n            if (getTemperatureUnit() === 'F')\r\n                return <div>{convertCToF(row.temperature)}</div>\r\n            return <div>{row.temperature}</div>\r\n        }\r\n    },\r\n    {\r\n        name: 'Data Received On',\r\n        sortable: true,\r\n        selector: 'dt',\r\n        cell: row => <div>{formatDateTime(row.dt)}</div>,\r\n    }\r\n];\r\n\r\n\r\nfunction Data({ setAlert }) {\r\n\r\n    var date = new Date();\r\n    date.setDate(date.getDate() - 90);\r\n\r\n    const { id } = useParams();\r\n    const [products, setList] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [startDate, setStartDate] = useState(date);\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [showing, setShowing] = useState(true);\r\n    var chartData = [];\r\n    var chartDataAverage = [];\r\n\r\n    useEffect(() => {\r\n        getProduct(id)\r\n            .then(items => {\r\n                console.log('getProduct returned');\r\n                setTitle('Sensor Name: ' + items.Name + ', Hardware Serial #: ' + items.SKU);\r\n\r\n                getProductDataByDate(id, formatDateTime(startDate), formatDateTime(endDate))\r\n                    .then(items => {\r\n                        console.log('getProductDataByDate returned');\r\n                        setList(items);\r\n                        loadChartData(items);\r\n                        if (chartData.length > 0) {\r\n                            handleLoad(chartData, chartDataAverage, id, startDate, endDate, title);\r\n                        } else {\r\n                            console.log('did not call handleLoad');\r\n                        }\r\n                    });\r\n            });\r\n\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        getProduct(id)\r\n            .then(items => {\r\n                setTitle('Sensor Name: ' + items.Name + ', Hardware Serial #: ' + items.SKU);\r\n\r\n                getProductDataByDate(id, formatDateTime(startDate), formatDateTime(endDate))\r\n                    .then(items => {\r\n                        setList(items);\r\n                        loadChartData(items);\r\n                        if (chartData.length > 0) {\r\n                            handleLoad(chartData, chartDataAverage, id, startDate, endDate, title);\r\n                        } else {\r\n                            console.log('did not call handleLoad');\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    function handleSelect(e) {\r\n        loadChartData();\r\n        if (showing)\r\n            setShowing(false);\r\n        else\r\n            setShowing(true);\r\n    };\r\n\r\n    function loadChartData(items) {\r\n\r\n        //console.log('loadChartData');\r\n        //console.log(items.length);\r\n        var temperature;\r\n        var dt;\r\n        var sum = 0.00;\r\n\r\n        chartData = [];\r\n        chartDataAverage = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            temperature = items[i].temperature;\r\n            if (getTemperatureUnit() === 'F') {\r\n                //console.log('=== F');\r\n                temperature = convertCToF(temperature);\r\n            }\r\n            sum = sum + parseFloat(temperature);\r\n            dt = items[i].dt;\r\n            //console.log(formatDateTime(dt));\r\n            //console.log(temperature);\r\n            //chartData.push(temperature);\r\n            chartData.push({ t: formatDateTime(dt), y: temperature });\r\n            //data.push({ date: formatDateTime(dt), name: \"name\" + i, value: temperature });\r\n        }\r\n\r\n        var average = (sum / products.length).toFixed(2);;\r\n        for (let i = 0; i < items.length; i++) {\r\n            chartDataAverage.push({ t: formatDateTime(items[i].dt), y: average });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div>\r\n                            <label>Start</label>\r\n                            <DatePicker className=\"form-control\" selected={startDate}\r\n                                onChange={date => setStartDate(date)}\r\n                                showTimeSelect />\r\n                        </div>\r\n                        <div>\r\n                            <label>End</label>\r\n                            <DatePicker className=\"form-control\" selected={endDate}\r\n                                onChange={date => setEndDate(date)}\r\n                                showTimeSelect />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                            {/*<button type=\"button\" className=\"btn btn-success\" onClick={handleSelect}>Toggle Graph</button>*/}\r\n                        </div>\r\n\r\n\r\n                    </form>\r\n                </div>\r\n\r\n                <div id=\"divmychart\" className=\"col-md-12\">\r\n                    <canvas id=\"mychart\"></canvas>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"status\">\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-md-12\">\r\n                    <DataTable\r\n                        title={title}\r\n                        columns={columns}\r\n                        data={products}\r\n                        paginationPerPage={5}\r\n                        paginationRowsPerPageOptions={[5]}\r\n                        pagination>\r\n                    </DataTable>\r\n                </div>\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default Data;\r\n\r\nvar MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nwindow.chartColors = {\r\n    red: 'rgb(255, 99, 132)',\r\n    orange: 'rgb(255, 159, 64)',\r\n    yellow: 'rgb(255, 205, 86)',\r\n    green: 'rgb(75, 192, 192)',\r\n    blue: 'rgb(54, 162, 235)',\r\n    purple: 'rgb(153, 102, 255)',\r\n    grey: 'rgb(201, 203, 207)'\r\n};\r\n\r\nvar handleLoad = function (chartData, chartDataAverage, id, startDate, endDate, title) {\r\n\r\n    console.log('handleLoad');\r\n\r\n    var divstatus = document.getElementById('status');\r\n\r\n    document.getElementById(\"divmychart\").innerHTML = \"\";\r\n    document.getElementById(\"divmychart\").innerHTML = '<canvas id=\"mychart\"></canvas>';\r\n\r\n    var c = document.getElementById('mychart');\r\n    var ctx = c.getContext('2d');\r\n\r\n    divstatus.innerHTML = \"Total Records: \" + chartData.length;\r\n    \r\n    /*\r\n    if (chartData.length === 0) {\r\n        console.log('chartData.length === 0');\r\n        getProductDataByDate(id, formatDateTime(startDate), formatDateTime(endDate))\r\n            .then(items => {\r\n                console.log(items.length);\r\n                var sum = 0.00;\r\n                chartData = []\r\n                chartDataAverage = []\r\n                chartTimeseriesData = []\r\n                for (let i = 0; i < items.length; i++) {\r\n                    var temperature = items[i].temperature;\r\n                    if (getTemperatureUnit() === 'F') {\r\n                        console.log('=== F');\r\n                        temperature = convertCToF(items[i].temperature);\r\n                    }\r\n                    sum = sum + parseFloat(temperature);\r\n                    var dt = items[i].dt;\r\n                    chartData.push({ t: formatDateTime(dt), y: temperature });\r\n                    //chartTimeseriesData.push({ t: formatDateTime(dt), y: temperature });\r\n                }\r\n                sum = sum / items.length;\r\n                for (let i = 0; i < items.length; i++) {\r\n                    chartDataAverage.push(sum);\r\n                }\r\n                if (window.chart) {\r\n                    window.chart.update();\r\n                }\r\n            });\r\n    }\r\n    */\r\n\r\n    var config = {\r\n        data: {\r\n            datasets: [{\r\n                label: 'Temperature °' + getTemperatureUnit(),\r\n                borderColor: \"#55bae7\",\r\n                backgroundColor: \"#55bae7\",\r\n                pointBackgroundColor: \"#55bae7\",\r\n                pointBorderColor: \"#55bae7\",\r\n                pointHoverBackgroundColor: \"#55bae7\",\r\n                pointHoverBorderColor: \"#55bae7\",\r\n                pointRadius: 0,\r\n                pointHoverRadius: 0,\r\n                data: chartData,\r\n                type: 'line',\r\n                fill: false,\r\n            }/*,\r\n            {\r\n                label: 'Average',\r\n                data: chartDataAverage,\r\n                type: 'line',\r\n                fill: false,\r\n                borderColor: \"#00FF00\",\r\n                backgroundColor: \"#00FF00\",\r\n                pointRadius: 0,\r\n                pointHoverRadius: 0,\r\n            }*/]\r\n        },\r\n        options: {\r\n            responsive: true,\r\n            title: {\r\n                display: true,\r\n                text: title\r\n            },\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false,\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    type: 'time',\r\n                    time: {\r\n                        displayFormats: {\r\n                            month: 'DD MMM-YY'\r\n                        }\r\n                    },\r\n                    distribution: 'series',\r\n                    offset: true,\r\n                    ticks: {\r\n                        major: {\r\n                            enabled: true,\r\n                            fontStyle: 'bold'\r\n                        },\r\n                        source: 'data',\r\n                        autoSkip: true,\r\n                        autoSkipPadding: 75,\r\n                        maxRotation: 0,\r\n                        sampleSize: 100\r\n                    }/*,\r\n                    afterBuildTicks: function (scale, ticks) {\r\n                        var majorUnit = scale._majorUnit;\r\n                        console.log(ticks);\r\n                        var firstTick = ticks[0];\r\n                        var i, ilen, val, tick, currMajor, lastMajor;\r\n\r\n                        val = moment(ticks[0].value);\r\n                        if ((majorUnit === 'minute' && val.second() === 0)\r\n                            || (majorUnit === 'hour' && val.minute() === 0)\r\n                            || (majorUnit === 'day' && val.hour() === 9)\r\n                            || (majorUnit === 'month' && val.date() <= 3 && val.isoWeekday() === 1)\r\n                            || (majorUnit === 'year' && val.month() === 0)) {\r\n                            firstTick.major = true;\r\n                        } else {\r\n                            firstTick.major = false;\r\n                        }\r\n                        lastMajor = val.get(majorUnit);\r\n\r\n                        for (i = 1, ilen = ticks.length; i < ilen; i++) {\r\n                            tick = ticks[i];\r\n                            val = moment(tick.value);\r\n                            currMajor = val.get(majorUnit);\r\n                            tick.major = currMajor !== lastMajor;\r\n                            lastMajor = currMajor;\r\n                        }\r\n                        return ticks;\r\n                    }*/\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Temperature °' + getTemperatureUnit() + ''\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    };\r\n    \r\n    if (window.chart) {\r\n        window.chart.destroy();\r\n        window.chart = null;\r\n        console.log('destroy old');\r\n    }\r\n    \r\n    window.chart = new Chart(ctx, config);\r\n    window.chart.update();\r\n}\r\n\r\n\r\n","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Product\\SetRule.js",["195","196","197","198","199","200"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\r\nimport { getProduct, updateProductSetRule } from '../../services/products';\r\nimport ViewProducts from './ViewProducts';\r\nimport { convertCToF, convertFToC, getTemperatureUnit } from '../../Utils'\r\n\r\nfunction SetRule({ setAlert }) {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [itemName, setItemName] = useState();\r\n    const [itemDescription, setItemDescription] = useState();\r\n    const [itemSKU, setItemSKU] = useState();\r\n    var [itemMinThreshold, setItemMinThreshold] = useState();\r\n    var [itemMaxThreshold, setItemMaxThreshold] = useState();\r\n    const [itemThresholdInterval, setItemThresholdInterval] = useState();\r\n    useEffect(() => {\r\n        getProduct(id)\r\n            .then(items => {\r\n                setItemName(items.Name);\r\n                setItemDescription(items.Description);\r\n                setItemSKU(items.SKU);\r\n                if (getTemperatureUnit() === 'F') {\r\n                    setItemMinThreshold(convertCToF(items.MinThreshold));\r\n                    setItemMaxThreshold(convertCToF(items.MaxThreshold));\r\n                }\r\n                else {\r\n                    setItemMinThreshold(items.MinThreshold);\r\n                    setItemMaxThreshold(items.MaxThreshold);\r\n                }\r\n                setItemThresholdInterval(items.MaxThresholdIntervalInSeconds);\r\n            })\r\n    }, []);\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewProducts/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!itemMinThreshold) {\r\n            alert('please set minimum threshold value');\r\n            return;\r\n        }\r\n        if (!itemMaxThreshold) {\r\n            alert('please set maximum threshold value');\r\n            return;\r\n        }\r\n\r\n\r\n        if (getTemperatureUnit() === 'F') {\r\n            itemMinThreshold = convertFToC(itemMinThreshold);\r\n            itemMaxThreshold = convertFToC(itemMaxThreshold);\r\n        }\r\n        updateProductSetRule(id, { itemMinThreshold, itemMaxThreshold, itemThresholdInterval });\r\n\r\n        history.push(\"/ViewProducts\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card card-primary\">\r\n                        <div className=\"card-header\">\r\n                            <h3 class=\"card-title\">Set Rule for Alert</h3>\r\n                        </div>\r\n                        <form onSubmit={e => onSubmit(e)}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputName\">Sensor Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputId\" type=\"hidden\" value={id} />\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" placeholder=\"Enter Name\" name=\"name\" defaultValue={itemName} readOnly=\"true\"\r\n                                        onChange={event => setItemName(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Description</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Description\" name=\"description\" defaultValue={itemDescription} readOnly=\"true\"\r\n                                        onChange={event => setItemDescription(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputSKU\">Hardware Serial No.</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputSKU\" placeholder=\"Hardware Serial Number\" name=\"sku\" defaultValue={itemSKU} readOnly=\"true\"\r\n                                        onChange={event => setItemSKU(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputSKU\">Min Temperature Threshold (°{getTemperatureUnit()})</label>\r\n                                    <input type=\"number\" step=\"any\" className=\"form-control\" id=\"exampleInputMinThreshold\" placeholder=\"Min Temperature Threshold\" name=\"threshold\" defaultValue={itemMinThreshold}\r\n                                        onChange={event => setItemMinThreshold(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputSKU\">Max Temperature Threshold (°{getTemperatureUnit()})</label>\r\n                                    <input type=\"number\" step=\"any\" className=\"form-control\" id=\"exampleInputMaxThreshold\" placeholder=\"Max Temperature Threshold\" name=\"threshold\" defaultValue={itemMaxThreshold}\r\n                                        onChange={event => setItemMaxThreshold(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputSKU\">Max Threshold Interval (seconds)</label>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"exampleInputThresholdInterval\" placeholder=\"Max Threshold Interval (seconds)\" name=\"thresholdinterval\" defaultValue={itemThresholdInterval}\r\n                                        onChange={event => setItemThresholdInterval(event.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SetRule;","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Dashboard\\Dashboard.js",["201","202","203","204"],"import React from 'react';\r\nimport { getTemperatureUnit } from '../../Utils'\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <section className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3 col-6\">\r\n            <div className=\"small-box bg-danger\">\r\n              <div className=\"inner\">\r\n                <h3>25°{getTemperatureUnit()}</h3>\r\n                <p>Highest Temperature</p>\r\n              </div>\r\n              <div className=\"icon\">\r\n                <i className=\"ion ion-bag\"></i>\r\n              </div>\r\n              <a href=\"#\" className=\"small-box-footer\">More info <i className=\"fas fa-arrow-circle-right\"></i></a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-3 col-6\">\r\n\r\n            <div className=\"small-box bg-success\">\r\n              <div className=\"inner\">\r\n                <h3>3°{getTemperatureUnit()}</h3>\r\n                <p>Lowest Temperature</p>\r\n              </div>\r\n              <div className=\"icon\">\r\n                <i className=\"ion ion-stats-bars\"></i>\r\n              </div>\r\n              <a href=\"#\" className=\"small-box-footer\">More info <i className=\"fas fa-arrow-circle-right\"></i></a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-3 col-6\">\r\n            <div className=\"small-box bg-info\">\r\n              <div className=\"inner\">\r\n                <h3>14</h3>\r\n                <p>User Registrations</p>\r\n              </div>\r\n              <div className=\"icon\">\r\n                <i className=\"ion ion-person-add\"></i>\r\n              </div>\r\n              <a href=\"#\" className=\"small-box-footer\">More info <i className=\"fas fa-arrow-circle-right\"></i></a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-3 col-6\">\r\n            <div className=\"small-box bg-warning\">\r\n              <div className=\"inner\">\r\n                <h3>65</h3>\r\n                <p>Device Registrations</p>\r\n              </div>\r\n              <div className=\"icon\">\r\n                <i className=\"ion ion-pie-graph\"></i>\r\n              </div>\r\n              <a href=\"#\" className=\"small-box-footer\">More info <i className=\"fas fa-arrow-circle-right\"></i></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </section>\r\n  );\r\n}","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Company\\ViewCompany.js",["205"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { getCompanies } from '../../services/company';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction ViewCompany() {\r\n  const [companies, setList] = useState([]);\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    getCompanies()\r\n      .then(items => {\r\n        if (mounted) {\r\n          setList(items)\r\n        }\r\n      })\r\n    return () => mounted = false;\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row col-md-12\">\r\n        <h2>Companies List</h2>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Phone</th>\r\n              <th>Address</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {companies.map(company => (\r\n              <tr key={company.Id}>\r\n                <td>{company.Name}</td>\r\n                <td>{company.Phone}</td>\r\n                <td>{company.Address}</td>\r\n                <td>\r\n                  {/*<Link className=\"btn btn-primary\">View</Link>*/}\r\n                  <Link className=\"btn btn-info\" to={`/company/edit/${company.Id}`}>Edit</Link>\r\n                  {/*<Link className=\"btn btn-secondary\">Delete</Link>*/}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ViewCompany;","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Company\\AddCompany.js",["206","207","208","209","210"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { addCompany } from '../../services/company';\r\nimport ViewCompany from './ViewCompany';\r\n\r\nfunction AddCompany({ setAlert }) {\r\n    const [company, setCompany] = useState({\r\n        name: \"\",\r\n        number: \"\",\r\n        address: \"\",\r\n    });\r\n    const onInputChange = e => {\r\n        setCompany({ ...company, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const { name, number, address } = company;\r\n    const history = useHistory();\r\n\r\n    //Comment Added\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewCompany/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!name) {\r\n            alert('please enter name');\r\n            return;\r\n        }\r\n        addCompany({ name, number, address });\r\n        history.push({\r\n            pathname: '/ViewCompany/',\r\n            search: '',\r\n            state: { alert: true }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card card-primary\">\r\n                        <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">Add Company</h3>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputName\"> Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" placeholder=\"Enter Name\"\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onChange={e => onInputChange(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Phone</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Enter Phone Number\"\r\n                                        name=\"number\"\r\n                                        value={number}\r\n                                        onChange={e => onInputChange(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Address</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Enter Address\"\r\n                                        name=\"address\"\r\n                                        value={address}\r\n                                        onChange={e => onInputChange(e)}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddCompany;","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Product\\AddProduct.js",["211","212","213","214","215"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { addProduct } from '../../services/products';\r\nimport ViewProducts from './ViewProducts';\r\n\r\nfunction AddProduct({ setAlert }) {\r\n    const [itemName, setItemName] = useState(\"\");\r\n    const [itemDescription, setItemDescription] = useState(\"\");\r\n    const [itemSKU, setItemSKU] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    //Comment Added\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(e.nativeEvent.submitter.name);\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewProducts/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!itemName) {\r\n            alert('please enter name');\r\n            return;\r\n        }\r\n        addProduct({ itemName, itemDescription, itemSKU });\r\n        history.push({\r\n            pathname: '/ViewProducts/',\r\n            search: '?query=abc',\r\n            state: { alert: true }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card card-primary\">\r\n                        <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">Add Sensor</h3>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputName\">Sensor Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" placeholder=\"Enter Name\" onChange={event => setItemName(event.target.value)} value={itemName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Description</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Description\" onChange={event => setItemDescription(event.target.value)} value={itemDescription} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputSKU\">Hardware Serial No.</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputSKU\" placeholder=\"Hardware Serial Number\" onChange={event => setItemSKU(event.target.value)} value={itemSKU} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddProduct;","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Company\\EditCompany.js",["216","217","218","219","220"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\r\nimport { getCompany, updateCompany } from '../../services/company';\r\nimport ViewCompany from './ViewCompany';\r\n\r\nfunction EditCompany({ setAlert }) {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [itemName, setItemName] = useState();\r\n    const [itemNumber, setItemNumber] = useState();\r\n    const [itemAddress, setItemAddress] = useState();\r\n\r\n    useEffect(() => {\r\n        getCompany(id)\r\n            .then(items => {\r\n                setItemName(items.Name);\r\n                setItemNumber(items.Phone);\r\n                setItemAddress(items.Address);\r\n            })\r\n    }, []);\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewCompany/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!itemName) {\r\n            alert('please enter name');\r\n            return;\r\n        }\r\n        updateCompany(id, { itemName, itemNumber, itemAddress });\r\n        history.push(\"/ViewCompany\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card card-primary\">\r\n                        <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">Edit Company Information</h3>\r\n                        </div>\r\n                        <form onSubmit={onSubmit}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputName\"> Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" placeholder=\"Enter Name\" name=\"name\" defaultValue={itemName}\r\n                                        onChange={event => setItemName(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Phone</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Enter Phone Number\" name=\"number\" defaultValue={itemNumber}\r\n                                        onChange={event => setItemNumber(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Address</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Enter Address\"\r\n                                        name=\"address\"\r\n                                        defaultValue={itemAddress}\r\n                                        onChange={event => setItemAddress(event.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditCompany;","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\User\\AddUser.js",["221","222","223","224","225","226","227","228","229","230","231"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { addProduct, addUser } from '../../services/users';\r\nimport { getCompanies } from '../../services/company';\r\nimport ViewUsers from './ViewUsers';\r\n\r\nfunction AddUser({ setAlert }) {\r\n    const [company, setCompany] = useState([]);\r\n    const [itemFirstName, setItemFirstName] = useState(\"\");\r\n    const [itemLastName, setItemLastName] = useState(\"\");\r\n    const [itemUserame, setItemUsername] = useState(\"\");\r\n    const [itemPassword, setItemPassword] = useState(\"\");\r\n    const [itemPhone, setItemPhone] = useState(\"\");\r\n    const [itemEmail, setItemEmail] = useState(\"\");\r\n    const [selectedCompany, setSelectedCompany] = useState(0);\r\n    const [itemCreatedOn, setItemCreatedOn] = useState();\r\n    const [itemTemperatureUnit, setItemTemperatureUnit] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        setItemTemperatureUnit(\"C\");\r\n        getCompanies()\r\n            .then(items => {\r\n                if (mounted) {\r\n                    setCompany(items)\r\n                }\r\n            })\r\n        return () => mounted = false;\r\n\r\n    }, [])\r\n\r\n    const handleChangeCompany = (e) => {\r\n        let { name, value } = e.target;\r\n        console.log('handleChangeCompany');\r\n        //console.log(name);\r\n        //console.log(value);\r\n\r\n        let index = e.target.selectedIndex;\r\n        let el = e.target.childNodes[index]\r\n        let id = el.getAttribute('id');\r\n        //console.log('Name, Code', e.target.value, option);\r\n\r\n        setSelectedCompany(id)\r\n    }\r\n\r\n    const handleChangeTemperatureUnit = (e) => {\r\n        console.log('handleChangeTemperatureUnit');\r\n        let { name, value } = e.target;\r\n        console.log(value);\r\n        setItemTemperatureUnit(value);\r\n    }\r\n\r\n    //Comment Added\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewUsers/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        //console.log(selectedCompany);\r\n        if (!itemFirstName || !itemLastName || !itemUserame || !itemPassword || selectedCompany == 0) {\r\n            alert('please provide all information.');\r\n            return;\r\n        }\r\n        addUser({ itemFirstName, itemLastName, itemUserame, itemPassword, itemPhone, itemEmail, selectedCompany, itemCreatedOn, itemTemperatureUnit });\r\n        history.push({\r\n            pathname: '/ViewUsers/',\r\n            search: '',\r\n            state: { alert: true }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card card-primary\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Add User</h3>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputFirstName\">First Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputFirstName\" placeholder=\"First Name\" onChange={event => setItemFirstName(event.target.value)} value={itemFirstName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputLastName\">Last Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputLastName\" placeholder=\"Last Name\" onChange={event => setItemLastName(event.target.value)} value={itemLastName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputUsername\">Username</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputUsername\" placeholder=\"Username\" onChange={event => setItemUsername(event.target.value)} value={itemUserame} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputEmail\">Password</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputPassword\" placeholder=\"Password\" type=\"password\" onChange={event => setItemPassword(event.target.value)} value={itemPassword} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputPhone\">Phone</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputPhone\" placeholder=\"Phone\" onChange={event => setItemPhone(event.target.value)} value={itemPhone} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputEmail\">Email</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail\" placeholder=\"Email\" onChange={event => setItemEmail(event.target.value)} value={itemEmail} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Company</label>\r\n                                    <select className=\"form-control select2\" style={{ 'width': '100%' }}\r\n                                        onChange={handleChangeCompany}>\r\n                                        <option value=\"0\" >Select Company</option>\r\n                                        {company.map(cmp => (<option id={cmp.Id}>{cmp.Name}</option>))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Temperature Unit</label>\r\n                                    <select className=\"form-control select2\" style={{ 'width': '100%' }}\r\n                                        onChange={handleChangeTemperatureUnit}>\r\n                                        <option value=\"C\">Celsius</option>\r\n                                        <option value=\"F\">Fahrenheit</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddUser;","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Rent\\ViewRents.js",["232","233","234","235"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { getList } from '../../services/products';\r\nimport { Table } from 'react-bootstrap';\r\nimport { formatDate } from \"../../Utils\"\r\nimport { getRents, getRentsByLeaseStatus } from '../../services/rent';\r\n\r\nfunction ViewRents() {\r\n\r\n  const [rents, setRents] = useState([]);\r\n  useEffect(() => {\r\n    console.log('on loading');\r\n    let mounted = true;\r\n    getRents()\r\n      .then(items => {\r\n        if (mounted) {\r\n          setRents(items)\r\n        }\r\n      })\r\n    return () => mounted = false;\r\n  }, [])\r\n\r\n\r\n  const handleChangeStatus = (e) => {\r\n    console.log('handleChangeStatus');\r\n    let { name, value } = e.target;\r\n    //let index = e.target.selectedIndex;\r\n    //let element = e.target.childNodes[index]\r\n    //let id = element.getAttribute('id');\r\n    console.log(value);\r\n    if (value == 0)\r\n      return;\r\n    getRentsByLeaseStatus(value).then(items => {\r\n      setRents(items)\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n\r\n      <div className=\"row col-md-12\">\r\n        <h2>Sensors Lease List</h2>\r\n\r\n        <hr />\r\n        <div>\r\n          <select className=\"select2 form-control\" style={{ 'width': '100%' }}\r\n            onChange={handleChangeStatus}>\r\n            <option value=\"0\">Select Filter</option>\r\n            <option value=\"1\">Leased</option>\r\n            <option value=\"2\">Available</option>\r\n            <option value=\"3\">All</option>\r\n          </select>\r\n        </div>\r\n\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Sensor</th>\r\n              <th>Company</th>\r\n              <th>Lease Date</th>\r\n              <th>Return Date</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rents.map(rent => (\r\n              <tr key={rent.Id}>\r\n                <td>{rent.Product}</td>\r\n                <td>{rent.Company}</td>\r\n                <td>{formatDate(rent.RentDT)}</td>\r\n                <td>{formatDate(rent.ReturnDT)}</td>\r\n                <td>\r\n                  <Link className=\"btn btn-primary\" to={`/rent/close/${rent.Id}`}>Close/Return</Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ViewRents;","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\User\\ViewUsers.js",["236"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { getList } from '../../services/users';\r\nimport { formatDate } from \"../../Utils\"\r\nimport { Table } from 'react-bootstrap';\r\nimport { getIsAdmin } from '../../Utils'\r\n\r\nfunction ViewUsers() {\r\n  const [users, setList] = useState([]);\r\n  useEffect(() => {\r\n    console.log('on loading');\r\n    let mounted = true;\r\n    let isAdmin = getIsAdmin();\r\n    getList(isAdmin)\r\n      .then(items => {\r\n        if (!isAdmin)\r\n        {\r\n          items = [ items ]\r\n        }\r\n        console.log(items);\r\n        if (mounted) {\r\n          setList(items)\r\n        }\r\n      })\r\n    return () => mounted = false;\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n\r\n      <div className=\"row col-md-12\">\r\n        <h2>Users List</h2>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n              <th>Phone</th>\r\n              <th>Email</th>\r\n              <th>Company</th>\r\n              <th>Created On</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map(user => (\r\n              <tr key={user.Id}>\r\n                <td>{user.FirstName}</td>\r\n                <td>{user.LastName}</td>\r\n                <td>{user.Username}</td>\r\n                <td>{user.Phone}</td>\r\n                <td>{user.Email}</td>\r\n                <td>{user.Company}</td>\r\n                <td>{formatDate(user.DT)}</td>\r\n                <td>\r\n                  {/*<Link className=\"btn btn-primary\">View</Link>*/}\r\n                  <Link className=\"btn btn-info\" to={`/user/edit/${user.Id}`}>Edit</Link>\r\n                  {/*<Link className=\"btn btn-secondary\">Delete</Link>*/}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ViewUsers;","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Rent\\CloseRent.js",["237"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { formatDate } from \"../../Utils\"\r\nimport { getRent, updateRent } from '../../services/rent';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nfunction CloseRent({ setAlert }) {\r\n\r\n    let { id } = useParams();\r\n    const [rent, setRent] = useState([]);\r\n    const [returnDT, setReturnDT] = useState(new Date());\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        getRent(id)\r\n            .then(items => {\r\n                if (mounted) {\r\n                    setRent(items);\r\n                    console.log(rent);\r\n                }\r\n            })\r\n        return () => mounted = false;\r\n\r\n    }, [])\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let dt = formatDate(returnDT)\r\n        console.log(dt);\r\n\r\n        updateRent(id, { dt });\r\n        history.push({\r\n            pathname: '/rent/index',\r\n            //search: '?query=abc',\r\n            state: { alert: true }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card card-primary\">\r\n                        <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">Close Lease (Return Sensor)</h3>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Sensor Name</label>\r\n                                    <input type=\"text\" readOnly=\"true\" className=\"form-control\" value={rent.Product} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Leased To</label>\r\n                                    <input type=\"text\" readOnly=\"true\" className=\"form-control\" value={rent.Company} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Lease Date</label>\r\n                                    <input type=\"text\" readOnly=\"true\" className=\"form-control\" value={formatDate(rent.RentDT)} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Return Date</label>\r\n                                    <DatePicker className=\"form-control\" selected={returnDT} onChange={date => setReturnDT(date)} />\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CloseRent;","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Rent\\AddRent.js",["238","239","240","241","242","243","244"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport { getCompanies } from '../../services/company';\r\nimport { getAvailableProducts } from '../../services/products';\r\nimport { addRent } from '../../services/rent';\r\n\r\nfunction AddRent({ setAlert }) {\r\n    const [company, setCompany] = useState([]);\r\n    const [product, setProduct] = useState([]);\r\n    const [selectedCompany, setSelectedCompany] = useState([]);\r\n    const [selectedProduct, setSelectedProduct] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        getAvailableProducts()\r\n            .then(items => {\r\n                if (mounted) {\r\n                    setProduct(items)\r\n                }\r\n            })\r\n        getCompanies()\r\n            .then(items => {\r\n                if (mounted) {\r\n                    setCompany(items)\r\n                }\r\n            })\r\n        return () => mounted = false;\r\n\r\n    }, [])\r\n\r\n    const handleChangeDevice = (e) => {\r\n        let { name, value } = e.target;\r\n        console.log('handleChangeDevice');\r\n        //console.log(name);\r\n        //console.log(value);\r\n\r\n        let index = e.target.selectedIndex;\r\n        let el = e.target.childNodes[index]\r\n        let id = el.getAttribute('id');\r\n        //console.log('Name, Code', e.target.value, option);\r\n\r\n        setSelectedProduct(id)\r\n        //this.setState({\r\n        //    [name]: value,\r\n        //});\r\n    }\r\n\r\n    const handleChangeCompany = (e) => {\r\n        let { name, value } = e.target;\r\n        console.log('handleChangeCompany');\r\n        //console.log(name);\r\n        //console.log(value);\r\n\r\n        let index = e.target.selectedIndex;\r\n        let el = e.target.childNodes[index]\r\n        let id = el.getAttribute('id');\r\n        //console.log('Name, Code', e.target.value, option);\r\n\r\n        setSelectedCompany(id)\r\n\r\n        //this.setState({\r\n        //    [name]: value,\r\n        //});\r\n    }\r\n\r\n    //Comment Added\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(selectedCompany);\r\n        console.log(selectedProduct);\r\n        if (selectedCompany.length == 0 || selectedProduct.length == 0) {\r\n            alert(\"Please select all fields\");\r\n            return;\r\n        }\r\n        addRent({ selectedCompany, selectedProduct });\r\n        history.push({\r\n            pathname: '/rent/index',\r\n            search: '?query=abc',\r\n            state: { alert: true }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card card-primary\">\r\n                        <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">New Lease</h3>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Sensor</label>\r\n                                    <select className=\"form-control select2\" style={{ 'width': '100%' }}\r\n                                        onChange={handleChangeDevice} >\r\n                                        <option value=\"0\" >Select Sensor</option>\r\n                                        {product.map(product => (<option id={product.Id}>{product.Name}</option>))}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Leased To</label>\r\n                                    <select className=\"form-control select2\" style={{ 'width': '100%' }}\r\n                                        onChange={handleChangeCompany}>\r\n                                        <option value=\"0\" >Select Company</option>\r\n                                        {company.map(cmp => (<option id={cmp.Id}>{cmp.Name}</option>))}\r\n                                    </select>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddRent;","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\User\\EditUser.js",["245","246","247","248","249","250","251","252","253","254"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\r\nimport { getUser, updateUser } from '../../services/users';\r\nimport { getCompanies } from '../../services/company';\r\nimport ViewProducts from './ViewUsers';\r\n\r\n\r\nfunction EditProduct({ setAlert }) {\r\n    const { id } = useParams();\r\n    const [company, setCompany] = useState([]);\r\n    const [itemFirstName, setItemFirstName] = useState('');\r\n    const [itemLastName, setItemLastName] = useState('');\r\n    const [itemUserame, setItemUsername] = useState('');\r\n    const [itemPassword, setItemPassword] = useState('');\r\n    const [itemPhone, setItemPhone] = useState('');\r\n    const [itemEmail, setItemEmail] = useState();\r\n    const [itemCompany, setItemCompany] = useState('');\r\n    const [itemTemperatureUnit, setItemTemperatureUnit] = useState('');\r\n    var selectedCompanyId = \"0\";\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getCompanies()\r\n            .then(items => {\r\n                setCompany(items)\r\n            });\r\n\r\n        getUser(id)            \r\n            .then(items => {\r\n                //console.log(items);\r\n                setItemFirstName(items.FirstName);\r\n                setItemLastName(items.LastName);\r\n                setItemUsername(items.Username);\r\n                setItemPassword(items.Password);\r\n                setItemPhone(items.Phone);\r\n                setItemEmail(items.Email);\r\n                setItemCompany(items.CompanyId);\r\n                setItemTemperatureUnit(items.TemperatureUnit);\r\n                selectedCompanyId = items.CompanyId;\r\n                console.log(items.CompanyId);\r\n                console.log(itemCompany);\r\n                console.log(selectedCompanyId);\r\n            });\r\n\r\n    }, []);\r\n\r\n    const handleChangeCompany = (e) => {\r\n        let { name, value } = e.target;\r\n        console.log('handleChangeCompany');\r\n        //console.log(name);\r\n        //console.log(value);\r\n\r\n        let index = e.target.selectedIndex;\r\n        let el = e.target.childNodes[index]\r\n        let id = el.getAttribute('id');\r\n        console.log('Name, Value', e.target.value, id);\r\n\r\n        setItemCompany(id)\r\n    }\r\n\r\n    const handleChangeTemperatureUnit = (e) => {\r\n        console.log('handleChangeTemperatureUnit');\r\n        let { name, value } = e.target;\r\n        console.log(value);\r\n        setItemTemperatureUnit(value);\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewUsers/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!itemFirstName || !itemLastName || !itemUserame || !itemPassword) {\r\n            alert('please provide all information.');\r\n            return;\r\n        }\r\n        updateUser(id, { itemFirstName, itemLastName, itemPassword, itemPhone, itemEmail, itemCompany, itemTemperatureUnit });\r\n        //alert(itemTemperatureUnit);\r\n        sessionStorage.setItem('temperatureUnit', itemTemperatureUnit);\r\n        history.push(\"/ViewUsers\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card card-primary\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Edit Device Information</h3>\r\n                        </div>\r\n                        <form onSubmit={e => onSubmit(e)}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputName\">First Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputId\" type=\"hidden\" value={id} />\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" placeholder=\"First Name\" name=\"firstname\" defaultValue={itemFirstName}\r\n                                        onChange={event => setItemFirstName(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Last Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Last Name\" name=\"lastname\" defaultValue={itemLastName}\r\n                                        onChange={event => setItemLastName(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputUsername\">Username</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputUsername\" readOnly placeholder=\"Username\" \r\n                                        name=\"username\" defaultValue={itemUserame} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputPassword\">Password</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputPassword\" placeholder=\"Password\" type=\"password\" \r\n                                        onChange={event => setItemPassword(event.target.value)} defaultValue={itemPassword} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputPhone\">Phone</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputPhone\" placeholder=\"Phone\" \r\n                                        onChange={event => setItemPhone(event.target.value)} defaultValue={itemPhone} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputEmail\">Email</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail\" placeholder=\"Email\" \r\n                                        onChange={event => setItemEmail(event.target.value)} defaultValue={itemEmail} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Company</label>\r\n                                    <select className=\"form-control select2\" style={{ 'width': '100%' }} \r\n                                        value={selectedCompanyId}\r\n                                        onChange={handleChangeCompany}>\r\n                                        <option value=\"0\" >Select Company</option>\r\n                                        {company.map(cmp => (<option value={cmp.Id}>{cmp.Name}</option>))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Temperature Unit</label>\r\n                                    <select className=\"form-control select2\" style={{ 'width': '100%' }} \r\n                                        value={itemTemperatureUnit}\r\n                                        onChange={handleChangeTemperatureUnit}>\r\n                                        <option value=\"C\">Celsius</option>\r\n                                        <option value=\"F\">Fahrenheit</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditProduct;","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\services\\products.js",["255"],"import { getIsAdmin, getLoggedInUserId } from '../Utils'\r\n\r\nexport function getList() {\r\n  //console.log('getList()');\r\n  var isAdmin = getIsAdmin();\r\n  if (isAdmin == 1) {\r\n    console.log('(isAdmin === 1)');\r\n    return fetch(`${process.env.REACT_APP_API_BASE_URL}/products`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }).then(data => data.json())\r\n  }\r\n  else {\r\n    var id = getLoggedInUserId();\r\n    return fetch(`${process.env.REACT_APP_API_BASE_URL}/products_by_user/` + id,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }).then(data => data.json())\r\n  }\r\n\r\n}\r\n\r\nexport function getAvailableProducts() {\r\n  //console.log('getList()');\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/get_available_products`,\r\n    {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(data => data.json())\r\n}\r\n\r\nexport function getProduct(id) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/products/` + id, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then(data => data.json())\r\n}\r\n\r\nexport function updateProduct(id, item) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/products/` + id, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ item })\r\n  })\r\n    .then(data => data.json())\r\n}\r\n\r\nexport function updateProductSetRule(id, item) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/update_product_set_rule/` + id, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ item })\r\n  }).then(data => data.json())\r\n}\r\n\r\nexport function addProduct(item) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/products`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ item })\r\n  }).then(data => data.json())\r\n}\r\n\r\nexport function updateList(item) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/products`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ item })\r\n  })\r\n    .then(data => data.json())\r\n}\r\n\r\nexport function getProductData(id) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/product_data/` + id, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then(data => data.json())\r\n}\r\n\r\nexport function getProductDataByDate(id, startDate, endDate) {\r\n  console.log('getProductDataByDate');\r\n  console.log(startDate);\r\n  console.log(endDate);\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/product_data/` + id + `/${startDate}/${endDate}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then(data => data.json())\r\n}","D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\services\\company.js",[],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\services\\users.js",[],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\services\\rent.js",[],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Location\\AddLocation.js",["256","257","258"],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Location\\ViewLocations.js",["259","260","261"],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\services\\locations.js",["262","263"],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Location\\EditLocation.js",["264","265","266","267","268","269","270"],"D:\\nodejsprojects\\sensor_management_react_crm\\basic_app\\src\\views\\Product\\SetLocation.js",["271","272","273","274","275","276"],{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","severity":1,"message":"282","line":8,"column":3,"nodeType":"283","messageId":"284","endLine":10,"endColumn":4},{"ruleId":"285","severity":1,"message":"286","line":84,"column":74,"nodeType":"287","messageId":"284","endLine":84,"endColumn":76},{"ruleId":"285","severity":1,"message":"286","line":111,"column":81,"nodeType":"287","messageId":"284","endLine":111,"endColumn":83},{"ruleId":"285","severity":1,"message":"286","line":135,"column":81,"nodeType":"287","messageId":"284","endLine":135,"endColumn":83},{"ruleId":"285","severity":1,"message":"286","line":168,"column":74,"nodeType":"287","messageId":"284","endLine":168,"endColumn":76},{"ruleId":"288","severity":1,"message":"289","line":55,"column":71,"nodeType":"290","endLine":57,"endColumn":15},{"ruleId":"291","severity":1,"message":"292","line":11,"column":11,"nodeType":"293","endLine":11,"endColumn":81},{"ruleId":"291","severity":1,"message":"292","line":17,"column":11,"nodeType":"293","endLine":17,"endColumn":44},{"ruleId":"291","severity":1,"message":"292","line":34,"column":11,"nodeType":"293","endLine":34,"endColumn":83},{"ruleId":"291","severity":1,"message":"292","line":39,"column":11,"nodeType":"293","endLine":39,"endColumn":106},{"ruleId":"294","severity":1,"message":"295","line":5,"column":10,"nodeType":"296","messageId":"297","endLine":5,"endColumn":18},{"ruleId":"294","severity":1,"message":"298","line":5,"column":20,"nodeType":"296","messageId":"297","endLine":5,"endColumn":30},{"ruleId":"294","severity":1,"message":"299","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":27},{"ruleId":"285","severity":1,"message":"286","line":45,"column":127,"nodeType":"287","messageId":"284","endLine":45,"endColumn":129},{"ruleId":"294","severity":1,"message":"300","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"301","line":3,"column":22,"nodeType":"296","messageId":"297","endLine":3,"endColumn":32},{"ruleId":"294","severity":1,"message":"302","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":20},{"ruleId":"303","severity":1,"message":"304","line":21,"column":8,"nodeType":"305","endLine":21,"endColumn":10,"suggestions":"306"},{"ruleId":"285","severity":1,"message":"286","line":25,"column":42,"nodeType":"287","messageId":"284","endLine":25,"endColumn":44},{"ruleId":"307","severity":1,"message":"308","line":54,"column":101,"nodeType":"309","endLine":54,"endColumn":114},{"ruleId":"294","severity":1,"message":"300","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"298","line":2,"column":26,"nodeType":"296","messageId":"297","endLine":2,"endColumn":36},{"ruleId":"294","severity":1,"message":"310","line":4,"column":22,"nodeType":"296","messageId":"297","endLine":4,"endColumn":36},{"ruleId":"294","severity":1,"message":"311","line":7,"column":10,"nodeType":"296","messageId":"297","endLine":7,"endColumn":14},{"ruleId":"294","severity":1,"message":"312","line":7,"column":16,"nodeType":"296","messageId":"297","endLine":7,"endColumn":19},{"ruleId":"294","severity":1,"message":"313","line":9,"column":8,"nodeType":"296","messageId":"297","endLine":9,"endColumn":14},{"ruleId":"294","severity":1,"message":"314","line":10,"column":8,"nodeType":"296","messageId":"297","endLine":10,"endColumn":9},{"ruleId":"303","severity":1,"message":"315","line":79,"column":8,"nodeType":"305","endLine":79,"endColumn":10,"suggestions":"316"},{"ruleId":"294","severity":1,"message":"317","line":101,"column":14,"nodeType":"296","messageId":"297","endLine":101,"endColumn":26},{"ruleId":"294","severity":1,"message":"318","line":194,"column":5,"nodeType":"296","messageId":"297","endLine":194,"endColumn":11},{"ruleId":"294","severity":1,"message":"300","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"302","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":20},{"ruleId":"303","severity":1,"message":"304","line":32,"column":8,"nodeType":"305","endLine":32,"endColumn":10,"suggestions":"319"},{"ruleId":"285","severity":1,"message":"286","line":36,"column":42,"nodeType":"287","messageId":"284","endLine":36,"endColumn":44},{"ruleId":"307","severity":1,"message":"308","line":76,"column":101,"nodeType":"309","endLine":76,"endColumn":114},{"ruleId":"291","severity":1,"message":"292","line":18,"column":15,"nodeType":"293","endLine":18,"endColumn":56},{"ruleId":"291","severity":1,"message":"292","line":31,"column":15,"nodeType":"293","endLine":31,"endColumn":56},{"ruleId":"291","severity":1,"message":"292","line":43,"column":15,"nodeType":"293","endLine":43,"endColumn":56},{"ruleId":"291","severity":1,"message":"292","line":55,"column":15,"nodeType":"293","endLine":55,"endColumn":56},{"ruleId":"294","severity":1,"message":"299","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":27},{"ruleId":"294","severity":1,"message":"320","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":26},{"ruleId":"294","severity":1,"message":"300","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"321","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":19},{"ruleId":"285","severity":1,"message":"286","line":22,"column":42,"nodeType":"287","messageId":"284","endLine":22,"endColumn":44},{"ruleId":"294","severity":1,"message":"320","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":26},{"ruleId":"294","severity":1,"message":"300","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"302","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":20},{"ruleId":"285","severity":1,"message":"286","line":16,"column":42,"nodeType":"287","messageId":"284","endLine":16,"endColumn":44},{"ruleId":"294","severity":1,"message":"300","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"321","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":19},{"ruleId":"303","severity":1,"message":"304","line":20,"column":8,"nodeType":"305","endLine":20,"endColumn":10,"suggestions":"322"},{"ruleId":"285","severity":1,"message":"286","line":24,"column":42,"nodeType":"287","messageId":"284","endLine":24,"endColumn":44},{"ruleId":"294","severity":1,"message":"300","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"323","line":3,"column":10,"nodeType":"296","messageId":"297","endLine":3,"endColumn":20},{"ruleId":"294","severity":1,"message":"324","line":5,"column":8,"nodeType":"296","messageId":"297","endLine":5,"endColumn":17},{"ruleId":"294","severity":1,"message":"325","line":16,"column":27,"nodeType":"296","messageId":"297","endLine":16,"endColumn":43},{"ruleId":"294","severity":1,"message":"326","line":34,"column":15,"nodeType":"296","messageId":"297","endLine":34,"endColumn":19},{"ruleId":"294","severity":1,"message":"327","line":34,"column":21,"nodeType":"296","messageId":"297","endLine":34,"endColumn":26},{"ruleId":"294","severity":1,"message":"326","line":49,"column":15,"nodeType":"296","messageId":"297","endLine":49,"endColumn":19},{"ruleId":"285","severity":1,"message":"286","line":57,"column":42,"nodeType":"287","messageId":"284","endLine":57,"endColumn":44},{"ruleId":"285","severity":1,"message":"286","line":67,"column":97,"nodeType":"287","messageId":"284","endLine":67,"endColumn":99},{"ruleId":"307","severity":1,"message":"308","line":103,"column":130,"nodeType":"309","endLine":103,"endColumn":145},{"ruleId":"294","severity":1,"message":"299","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":27},{"ruleId":"294","severity":1,"message":"328","line":3,"column":10,"nodeType":"296","messageId":"297","endLine":3,"endColumn":17},{"ruleId":"294","severity":1,"message":"326","line":26,"column":11,"nodeType":"296","messageId":"297","endLine":26,"endColumn":15},{"ruleId":"285","severity":1,"message":"286","line":31,"column":15,"nodeType":"287","messageId":"284","endLine":31,"endColumn":17},{"ruleId":"294","severity":1,"message":"299","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":27},{"ruleId":"303","severity":1,"message":"329","line":29,"column":8,"nodeType":"305","endLine":29,"endColumn":10,"suggestions":"330"},{"ruleId":"294","severity":1,"message":"331","line":3,"column":8,"nodeType":"296","messageId":"297","endLine":3,"endColumn":13},{"ruleId":"294","severity":1,"message":"326","line":35,"column":15,"nodeType":"296","messageId":"297","endLine":35,"endColumn":19},{"ruleId":"294","severity":1,"message":"327","line":35,"column":21,"nodeType":"296","messageId":"297","endLine":35,"endColumn":26},{"ruleId":"294","severity":1,"message":"326","line":52,"column":15,"nodeType":"296","messageId":"297","endLine":52,"endColumn":19},{"ruleId":"294","severity":1,"message":"327","line":52,"column":21,"nodeType":"296","messageId":"297","endLine":52,"endColumn":26},{"ruleId":"285","severity":1,"message":"286","line":75,"column":36,"nodeType":"287","messageId":"284","endLine":75,"endColumn":38},{"ruleId":"285","severity":1,"message":"286","line":75,"column":67,"nodeType":"287","messageId":"284","endLine":75,"endColumn":69},{"ruleId":"294","severity":1,"message":"300","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"302","line":5,"column":8,"nodeType":"296","messageId":"297","endLine":5,"endColumn":20},{"ruleId":"303","severity":1,"message":"332","line":41,"column":37,"nodeType":"333","endLine":41,"endColumn":52},{"ruleId":"294","severity":1,"message":"326","line":50,"column":15,"nodeType":"296","messageId":"297","endLine":50,"endColumn":19},{"ruleId":"294","severity":1,"message":"327","line":50,"column":21,"nodeType":"296","messageId":"297","endLine":50,"endColumn":26},{"ruleId":"294","severity":1,"message":"326","line":65,"column":15,"nodeType":"296","messageId":"297","endLine":65,"endColumn":19},{"ruleId":"285","severity":1,"message":"286","line":72,"column":42,"nodeType":"287","messageId":"284","endLine":72,"endColumn":44},{"ruleId":"307","severity":1,"message":"308","line":103,"column":101,"nodeType":"309","endLine":103,"endColumn":114},{"ruleId":"307","severity":1,"message":"308","line":119,"column":130,"nodeType":"309","endLine":119,"endColumn":145},{"ruleId":"285","severity":1,"message":"286","line":6,"column":15,"nodeType":"287","messageId":"284","endLine":6,"endColumn":17},{"ruleId":"294","severity":1,"message":"300","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"285","severity":1,"message":"286","line":20,"column":42,"nodeType":"287","messageId":"284","endLine":20,"endColumn":44},{"ruleId":"294","severity":1,"message":"299","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":27},{"ruleId":"294","severity":1,"message":"334","line":4,"column":10,"nodeType":"296","messageId":"297","endLine":4,"endColumn":20},{"ruleId":"294","severity":1,"message":"335","line":4,"column":22,"nodeType":"296","messageId":"297","endLine":4,"endColumn":32},{"ruleId":"294","severity":1,"message":"335","line":1,"column":10,"nodeType":"296","messageId":"297","endLine":1,"endColumn":20},{"ruleId":"294","severity":1,"message":"336","line":1,"column":22,"nodeType":"296","messageId":"297","endLine":1,"endColumn":39},{"ruleId":"294","severity":1,"message":"300","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"336","line":4,"column":10,"nodeType":"296","messageId":"297","endLine":4,"endColumn":27},{"ruleId":"294","severity":1,"message":"337","line":10,"column":12,"nodeType":"296","messageId":"297","endLine":10,"endColumn":22},{"ruleId":"303","severity":1,"message":"304","line":18,"column":8,"nodeType":"305","endLine":18,"endColumn":10,"suggestions":"338"},{"ruleId":"285","severity":1,"message":"286","line":22,"column":42,"nodeType":"287","messageId":"284","endLine":22,"endColumn":44},{"ruleId":"307","severity":1,"message":"308","line":51,"column":101,"nodeType":"309","endLine":51,"endColumn":114},{"ruleId":"294","severity":1,"message":"300","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":24},{"ruleId":"294","severity":1,"message":"302","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":20},{"ruleId":"303","severity":1,"message":"304","line":32,"column":8,"nodeType":"305","endLine":32,"endColumn":10,"suggestions":"339"},{"ruleId":"285","severity":1,"message":"286","line":36,"column":42,"nodeType":"287","messageId":"284","endLine":36,"endColumn":44},{"ruleId":"307","severity":1,"message":"308","line":76,"column":101,"nodeType":"309","endLine":76,"endColumn":114},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'Link' is defined but never used.","'updateList' is defined but never used.","'ViewProducts' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["342"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'getProductData' is defined but never used.","'Line' is defined but never used.","'Bar' is defined but never used.","'moment' is defined but never used.","'$' is defined but never used.","React Hook useEffect has missing dependencies: 'chartData', 'chartDataAverage', 'endDate', 'id', 'loadChartData', 'startDate', and 'title'. Either include them or remove the dependency array.",["343"],"'handleSelect' is defined but never used.","'MONTHS' is assigned a value but never used.",["344"],"'useEffect' is defined but never used.","'ViewCompany' is defined but never used.",["345"],"'addProduct' is defined but never used.","'ViewUsers' is defined but never used.","'setItemCreatedOn' is assigned a value but never used.","'name' is assigned a value but never used.","'value' is assigned a value but never used.","'getList' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'rent'. Either include them or remove the dependency array.",["346"],"'Toast' is defined but never used.","Assignments to the 'selectedCompanyId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'formatDate' is defined but never used.","'getIsAdmin' is defined but never used.","'getLoggedInUserId' is defined but never used.","'itemUserId' is assigned a value but never used.",["347"],["348"],"no-global-assign","no-unsafe-negation",{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"349","fix":"353"},{"desc":"349","fix":"354"},{"desc":"355","fix":"356"},{"desc":"349","fix":"357"},{"desc":"349","fix":"358"},"Update the dependencies array to be: [id]",{"range":"359","text":"360"},"Update the dependencies array to be: [chartData, chartDataAverage, endDate, id, loadChartData, startDate, title]",{"range":"361","text":"362"},{"range":"363","text":"360"},{"range":"364","text":"360"},"Update the dependencies array to be: [id, rent]",{"range":"365","text":"366"},{"range":"367","text":"360"},{"range":"368","text":"360"},[767,769],"[id]",[2632,2634],"[chartData, chartDataAverage, endDate, id, loadChartData, startDate, title]",[1496,1498],[741,743],[823,825],"[id, rent]",[655,657],[1500,1502]]