[{"D:\\nodejsprojects\\react_crm\\basic_app\\src\\index.js":"1","D:\\nodejsprojects\\react_crm\\basic_app\\src\\reportWebVitals.js":"2","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\App.js":"3","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\useToken.js":"4","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\Sidebar.js":"5","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\Content.js":"6","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\Footer.js":"7","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\Breadcrumb.js":"8","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\Header.js":"9","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Login\\Login.js":"10","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Product\\ViewProducts.js":"11","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Product\\AddProduct.js":"12","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Product\\EditProduct.js":"13","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Dashboard\\Dashboard.js":"14","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Company\\ViewCompany.js":"15","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Company\\EditCompany.js":"16","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Rent\\AddRent.js":"17","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Company\\AddCompany.js":"18","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Rent\\ViewRents.js":"19","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Rent\\CloseRent.js":"20","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\User\\AddUser.js":"21","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\User\\ViewUsers.js":"22","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\User\\EditUser.js":"23","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Product\\Data.js":"24","D:\\nodejsprojects\\react_crm\\basic_app\\src\\Utils.js":"25","D:\\nodejsprojects\\react_crm\\basic_app\\src\\services\\rent.js":"26","D:\\nodejsprojects\\react_crm\\basic_app\\src\\services\\company.js":"27","D:\\nodejsprojects\\react_crm\\basic_app\\src\\services\\products.js":"28","D:\\nodejsprojects\\react_crm\\basic_app\\src\\services\\users.js":"29","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Product\\SetRule.js":"30"},{"size":529,"mtime":1613224791857,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1613218223130,"results":"33","hashOfConfig":"32"},{"size":808,"mtime":1614842338188,"results":"34","hashOfConfig":"32"},{"size":779,"mtime":1617044394223,"results":"35","hashOfConfig":"32"},{"size":7943,"mtime":1617045291409,"results":"36","hashOfConfig":"32"},{"size":2263,"mtime":1616331303037,"results":"37","hashOfConfig":"32"},{"size":321,"mtime":1613324240593,"results":"38","hashOfConfig":"32"},{"size":666,"mtime":1614501692360,"results":"39","hashOfConfig":"32"},{"size":1667,"mtime":1616266842581,"results":"40","hashOfConfig":"32"},{"size":1380,"mtime":1617044988944,"results":"41","hashOfConfig":"32"},{"size":1797,"mtime":1616331243529,"results":"42","hashOfConfig":"32"},{"size":3323,"mtime":1614755491365,"results":"43","hashOfConfig":"32"},{"size":3813,"mtime":1614755580217,"results":"44","hashOfConfig":"32"},{"size":2329,"mtime":1617045492725,"results":"45","hashOfConfig":"32"},{"size":1480,"mtime":1614755944132,"results":"46","hashOfConfig":"32"},{"size":3726,"mtime":1614756067978,"results":"47","hashOfConfig":"32"},{"size":4583,"mtime":1613756506771,"results":"48","hashOfConfig":"32"},{"size":3775,"mtime":1614755787253,"results":"49","hashOfConfig":"32"},{"size":2368,"mtime":1613757502753,"results":"50","hashOfConfig":"32"},{"size":3185,"mtime":1613756472019,"results":"51","hashOfConfig":"32"},{"size":7249,"mtime":1616945993153,"results":"52","hashOfConfig":"32"},{"size":2006,"mtime":1616855719348,"results":"53","hashOfConfig":"32"},{"size":8316,"mtime":1617304901522,"results":"54","hashOfConfig":"32"},{"size":12446,"mtime":1617312133836,"results":"55","hashOfConfig":"32"},{"size":1806,"mtime":1617048574294,"results":"56","hashOfConfig":"32"},{"size":1549,"mtime":1614777238335,"results":"57","hashOfConfig":"32"},{"size":1296,"mtime":1614777289171,"results":"58","hashOfConfig":"32"},{"size":2976,"mtime":1616332215253,"results":"59","hashOfConfig":"32"},{"size":1630,"mtime":1616855799659,"results":"60","hashOfConfig":"32"},{"size":6585,"mtime":1617048368204,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1c2yxiu",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"64"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"64"},"D:\\nodejsprojects\\react_crm\\basic_app\\src\\index.js",[],["142","143"],"D:\\nodejsprojects\\react_crm\\basic_app\\src\\reportWebVitals.js",[],"D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\App.js",[],"D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\useToken.js",[],"D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\Sidebar.js",["144","145","146","147","148"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { getIsAdmin } from '../../Utils'\r\n\r\nfunction Sidebar() {\r\n\r\n  const [pathname, setPathname] = useState(window.location.pathname);\r\n  Array.prototype.contains = function (obj) {\r\n    return this.indexOf(obj) > -1;\r\n  };\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    //setPathname(window.location.pathname);         \r\n  }, [pathname]);\r\n\r\n  function toggle(e, data) {\r\n    e.preventDefault();\r\n    console.log(data);\r\n    //console.log(window.location.pathname);\r\n    setPathname(data);\r\n    history.push({\r\n      pathname: data\r\n    });\r\n  }\r\n\r\n  function logout(e, data) {\r\n    e.preventDefault();\r\n    console.log(data);\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    //console.log(window.location.pathname);\r\n    setPathname(data);\r\n    //history.push('login');\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n\r\n    <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n      <Link to=\"/dashboard\" className=\"brand-link\">\r\n        {/*\r\n        <img src=\"/assets/dist/img/AdminLTELogo.png\"\r\n          alt=\"AdminLTE Logo\"\r\n          className=\"brand-image img-circle elevation-3\"\r\n          style={{ \"opacity\": \".8\" }} />\r\n        */}\r\n        <span className=\"brand-text font-weight-light\">Sensor Management</span>\r\n      </Link>\r\n\r\n      <div className=\"sidebar\">\r\n\r\n        <div className=\"form-inline\">\r\n          <div className=\"input-group\" data-widget=\"sidebar-search\">\r\n            <input className=\"form-control form-control-sidebar\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-sidebar\">\r\n                <i className=\"fas fa-search fa-fw\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <nav className=\"mt-2\">\r\n          <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/dashboard\" onClick={((e) => toggle(e, '/dashboard'))} className={\"nav-link \" + (pathname.match('/dashboard') ? \"active \" : \" \")}>\r\n                <i className=\"nav-icon fas fa-tachometer-alt\"></i>\r\n                <p>\r\n                  Dashboard\r\n                </p>\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item menu-close\">\r\n              <Link href=\"#\" className={\"nav-link \" + (['/AddProduct', '/ViewProducts'].contains(pathname) ? \"active\" : \"\")}>\r\n                <i className=\"nav-icon fas fa-columns\"></i>\r\n                <p>\r\n                  Devices\r\n                <i className=\"right fas fa-angle-left\"></i>\r\n                </p>\r\n              </Link>\r\n              <ul className=\"nav nav-treeview\">\r\n                <li className=\"nav-item\" style={{ display: (getIsAdmin() == 1) ? \"show\" : \"none\" }}>\r\n                  <Link to=\"/AddProduct\" onClick={((e) => toggle(e, '/AddProduct'))} className={\"nav-link \" + (pathname.match('/AddProduct') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>Add Device</p>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/ViewProducts\" onClick={((e) => toggle(e, '/ViewProducts'))} className={\"nav-link \" + (pathname.match('/ViewProducts') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>View Devices</p>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n\r\n            <li className=\"nav-item menu-close\" style={{ display: (getIsAdmin() == 1) ? \"show\" : \"none\" }}>\r\n              <Link href=\"#\" className={\"nav-link \" + (['/AddCompany', '/ViewCompany'].contains(pathname) ? \"active\" : \"\")}>\r\n                <i className=\"nav-icon fas fa-copy\"></i>\r\n                <p>\r\n                  Company\r\n                <i className=\"right fas fa-angle-left\"></i>\r\n                </p>\r\n              </Link>\r\n              <ul className=\"nav nav-treeview\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/AddCompany\" onClick={((e) => toggle(e, '/AddCompany'))} className={\"nav-link \" + (pathname.match('/AddCompany') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>Add Company</p>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/ViewCompany\" onClick={((e) => toggle(e, '/ViewCompany'))} className={\"nav-link \" + (pathname.match('/ViewCompany') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>View Companies</p>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n\r\n            <li className=\"nav-item menu-close\" style={{ display: (getIsAdmin() == 1) ? \"show\" : \"none\" }}>\r\n              <Link href=\"#\" className={\"nav-link \" + (['/company/add', '/company/edit', '/company/index'].contains(pathname) ? \"active\" : \"\")}>\r\n                <i className=\"nav-icon fas fa-th\"></i>\r\n                <p>\r\n                  Lease Devices\r\n                <i className=\"right fas fa-angle-left\"></i>\r\n                </p>\r\n              </Link>\r\n              <ul className=\"nav nav-treeview\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/NewLease\" onClick={((e) => toggle(e, '/rent/add'))} className={\"nav-link \" + (pathname.match('/rent/add') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>New Lease</p>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/ViewLeases\" onClick={((e) => toggle(e, '/rent/index'))} className={\"nav-link \" + (pathname.match('/rent/index') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>View Leases</p>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n\r\n            <li className=\"nav-item menu-close\">\r\n              <Link href=\"#\" className={\"nav-link \" + (['/AddUser', '/ViewUsers'].contains(pathname) ? \"active\" : \"\")}>\r\n                <i className=\"nav-icon fas fa-edit\"></i>\r\n                <p>\r\n                  User Management\r\n                <i className=\"right fas fa-angle-left\"></i>\r\n                </p>\r\n              </Link>\r\n              <ul className=\"nav nav-treeview\">\r\n                <li className=\"nav-item\" style={{ display: (getIsAdmin() == 1) ? \"show\" : \"none\" }}>\r\n                  <Link to=\"/AddUser\" onClick={((e) => toggle(e, '/AddUser'))} className={\"nav-link \" + (pathname.match('/AddUser') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>Add New User</p>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/ViewUsers\" onClick={((e) => toggle(e, '/ViewUsers'))} className={\"nav-link \" + (pathname.match('/ViewUsers') ? \"active \" : \" \")}>\r\n                    <i className=\"far fa-circle nav-icon\"></i>\r\n                    <p>View Users</p>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/login\" onClick={((e) => logout(e, '/login'))} className={\"nav-link \" + (pathname.match('/login') ? \"active \" : \" \")}>\r\n                <i className=\"nav-icon fa fa-share\"></i>\r\n                <p>\r\n                  Logout\r\n                </p>\r\n              </Link>\r\n            </li>\r\n\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\Content.js",["149"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Login from '../Login/Login';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\nimport ViewProducts from '../Product/ViewProducts';\r\nimport AddProduct from '../Product/AddProduct';\r\nimport EditProduct from '../Product/EditProduct';\r\nimport Data from '../Product/Data';\r\nimport SetRule from '../Product/SetRule'\r\nimport ViewCompany from '../Company/ViewCompany';\r\nimport AddCompany from '../Company/AddCompany';\r\nimport EditCompany from '../Company/EditCompany';\r\nimport AddRent from '../Rent/AddRent';\r\nimport ViewRents from '../Rent/ViewRents';\r\nimport CloseRent from '../Rent/CloseRent';\r\nimport AddUser from '../User/AddUser';\r\nimport ViewUsers from '../User/ViewUsers';\r\nimport EditUser from '../User/EditUser';\r\n\r\n\r\nfunction Content() {\r\n\r\n  return (\r\n   \r\n      <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />            \r\n            <Route exact path=\"/dashboard\" component={Dashboard} />\r\n\r\n            <Route exact path=\"/login\" component={Login} />\r\n            \r\n            <Route exact path=\"/ViewProducts\" component={ViewProducts} />            \r\n            <Route exact path=\"/AddProduct\" component={AddProduct} /> \r\n            <Route exact path=\"/product/edit/:id\" component={EditProduct} />\r\n            <Route exact path=\"/product/data/:id\" component={Data} />\r\n            <Route exact path=\"/SetRule/:id\" component={SetRule} /> \r\n            \r\n            <Route exact path=\"/ViewCompany\" component={ViewCompany} /> \r\n            <Route exact path=\"/AddCompany\" component={AddCompany} /> \r\n            <Route exact path=\"/company/edit/:id\" component={EditCompany} />\r\n\r\n            <Route exact path=\"/rent/index\" component={ViewRents} />  \r\n            <Route exact path=\"/rent/add\" component={AddRent} />\r\n            <Route exact path=\"/rent/close/:id\" component={CloseRent} /> \r\n\r\n            <Route exact path=\"/ViewUsers\" component={ViewUsers} /> \r\n            <Route exact path=\"/AddUser\" component={AddUser} /> \r\n            <Route exact path=\"/user/edit/:id\" component={EditUser} />\r\n\r\n            /*<Redirect from='/AddProduct/' to=\"/ViewProducts/\" />*/\r\n\r\n      </Switch>\r\n  );    \r\n}\r\n\r\nexport default Content;\r\n","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\Footer.js",[],"D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\Breadcrumb.js",[],"D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\App\\Header.js",["150","151","152","153"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n\r\n    <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\"><i className=\"fas fa-bars\"></i></a>\r\n        </li>\r\n        <li className=\"nav-item d-none d-sm-inline-block\">\r\n          <Link to=\"/dashboard\" className=\"nav-link\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item d-none d-sm-inline-block\">\r\n          <a href=\"#\" className=\"nav-link\">Contact</a>\r\n        </li>\r\n      </ul>\r\n\r\n      <form className=\"form-inline ml-3\">\r\n        <div className=\"input-group input-group-sm\">\r\n          <input className=\"form-control form-control-navbar\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          <div className=\"input-group-append\">\r\n            <button className=\"btn btn-navbar\" type=\"submit\">\r\n              <i className=\"fas fa-search\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" data-widget=\"fullscreen\" href=\"#\" role=\"button\">\r\n            <i className=\"fas fa-expand-arrows-alt\"></i>\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" data-widget=\"control-sidebar\" data-slide=\"true\" href=\"#\" role=\"button\">\r\n            <i className=\"fas fa-th-large\"></i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Login\\Login.js",["154","155"],"import React from 'react';\r\nimport './Login.css';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nasync function loginUser(credentials) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  }).then(data => data.json())\r\n}\r\n\r\nexport default function Login({ setToken }) {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const token = await loginUser({ username, password });\r\n    setToken(token);\r\n    console.log('handleSubmit');\r\n    window.location.replace('/Dashboard');\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>Login</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"u\" placeholder=\"Username\" required=\"required\" onChange={e => setUserName(e.target.value)} />\r\n        <input type=\"password\" name=\"p\" placeholder=\"Password\" required=\"required\" onChange={e => setPassword(e.target.value)} />\r\n        <button type=\"submit\" className=\"btn btn-primary btn-block btn-large\">Let me in.</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n}","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Product\\ViewProducts.js",["156","157"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { getList } from '../../services/products';\r\nimport { formatDate, getIsAdmin } from \"../../Utils\"\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction ViewProducts() {\r\n  const [products, setList] = useState([]);\r\n  useEffect(() => {\r\n    console.log('on loading');\r\n    let mounted = true;\r\n    getList()\r\n      .then(items => {\r\n        if (mounted) {\r\n          setList(items)\r\n        }\r\n      })\r\n    return () => mounted = false;\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n\r\n      <div className=\"row col-md-12\">\r\n        <h2>Device List</h2>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Device Name</th>\r\n              <th>Description</th>\r\n              <th>Hardware Serial No.</th>\r\n              <th>Created On</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map(product => (\r\n              <tr key={product.Id}>\r\n                <td>{product.Name}</td>\r\n                <td>{product.Description}</td>\r\n                <td>{product.SKU}</td>\r\n                <td>{formatDate(product.DT)}</td>\r\n                <td>\r\n                  <Link className=\"btn btn-sm btn-primary\" to={`/product/edit/${product.Id}`} style={{ display: (getIsAdmin() == 1) ? \"show\" : \"none\" }}>Edit</Link>\r\n                  <Link className=\"btn btn-secondary\" to={`/SetRule/${product.Id}`}>Alert Rule</Link>\r\n                  <Link className=\"btn btn-secondary\" to={`/product/data/${product.Id}`}>Data</Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ViewProducts;","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Product\\AddProduct.js",["158","159","160","161","162"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { addProduct } from '../../services/products';\r\nimport ViewProducts from './ViewProducts';\r\n\r\nfunction AddProduct({ setAlert }) {\r\n    const [itemName, setItemName] = useState(\"\");\r\n    const [itemDescription, setItemDescription] = useState(\"\");\r\n    const [itemSKU, setItemSKU] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    //Comment Added\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(e.nativeEvent.submitter.name);\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewProducts/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!itemName) {\r\n            alert('please enter name');\r\n            return;\r\n        }\r\n        addProduct({ itemName, itemDescription, itemSKU });\r\n        history.push({\r\n            pathname: '/ViewProducts/',\r\n            search: '?query=abc',\r\n            state: { alert: true }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card card-primary\">\r\n                        <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">Add Device</h3>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputName\">Device Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" placeholder=\"Enter Name\" onChange={event => setItemName(event.target.value)} value={itemName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Description</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Description\" onChange={event => setItemDescription(event.target.value)} value={itemDescription} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputSKU\">Hardware Serial No.</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputSKU\" placeholder=\"Hardware Serial Number\" onChange={event => setItemSKU(event.target.value)} value={itemSKU} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddProduct;","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Product\\EditProduct.js",["163","164","165","166","167","168","169"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\r\nimport { getProduct, updateList, updateProduct } from '../../services/products';\r\nimport ViewProducts from './ViewProducts';\r\n\r\n\r\nfunction EditProduct({ setAlert }) {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [itemName, setItemName] = useState();\r\n    const [itemDescription, setItemDescription] = useState();\r\n    const [itemSKU, setItemSKU] = useState();\r\n    \r\n    useEffect(() => {\r\n        getProduct(id)\r\n            .then(items => {\r\n                setItemName(items.Name);\r\n                setItemDescription(items.Description);\r\n                setItemSKU(items.SKU);\r\n            })\r\n    }, []);\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewProducts/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!itemName) {\r\n            alert('please enter name');\r\n            return;\r\n        }\r\n        updateProduct(id, { itemName, itemDescription, itemSKU });\r\n        history.push(\"/ViewProducts\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card card-primary\">\r\n                        <div className=\"card-header\">\r\n                            <h3 class=\"card-title\">Edit Device Information</h3>\r\n                        </div>\r\n                        <form onSubmit={e => onSubmit(e)}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputName\">Device Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputId\" type=\"hidden\" value={id} />\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" placeholder=\"Enter Name\" name=\"name\" defaultValue={itemName}\r\n                                        onChange={event => setItemName(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Description</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Description\" name=\"description\" defaultValue={itemDescription}\r\n                                        onChange={event => setItemDescription(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputSKU\">Hardware Serial No.</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputSKU\" placeholder=\"Hardware Serial Number\" name=\"sku\" defaultValue={itemSKU}\r\n                                        onChange={event => setItemSKU(event.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditProduct;","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Dashboard\\Dashboard.js",["170","171","172","173"],"import React from 'react';\r\nimport { getTemperatureUnit } from '../../Utils'\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <section className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3 col-6\">\r\n            <div className=\"small-box bg-danger\">\r\n              <div className=\"inner\">\r\n                <h3>25°{getTemperatureUnit()}</h3>\r\n                <p>Highest Temperature</p>\r\n              </div>\r\n              <div className=\"icon\">\r\n                <i className=\"ion ion-bag\"></i>\r\n              </div>\r\n              <a href=\"#\" className=\"small-box-footer\">More info <i className=\"fas fa-arrow-circle-right\"></i></a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-3 col-6\">\r\n\r\n            <div className=\"small-box bg-success\">\r\n              <div className=\"inner\">\r\n                <h3>3°{getTemperatureUnit()}</h3>\r\n                <p>Lowest Temperature</p>\r\n              </div>\r\n              <div className=\"icon\">\r\n                <i className=\"ion ion-stats-bars\"></i>\r\n              </div>\r\n              <a href=\"#\" className=\"small-box-footer\">More info <i className=\"fas fa-arrow-circle-right\"></i></a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-3 col-6\">\r\n            <div className=\"small-box bg-info\">\r\n              <div className=\"inner\">\r\n                <h3>14</h3>\r\n                <p>User Registrations</p>\r\n              </div>\r\n              <div className=\"icon\">\r\n                <i className=\"ion ion-person-add\"></i>\r\n              </div>\r\n              <a href=\"#\" className=\"small-box-footer\">More info <i className=\"fas fa-arrow-circle-right\"></i></a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-3 col-6\">\r\n            <div className=\"small-box bg-warning\">\r\n              <div className=\"inner\">\r\n                <h3>65</h3>\r\n                <p>Device Registrations</p>\r\n              </div>\r\n              <div className=\"icon\">\r\n                <i className=\"ion ion-pie-graph\"></i>\r\n              </div>\r\n              <a href=\"#\" className=\"small-box-footer\">More info <i className=\"fas fa-arrow-circle-right\"></i></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </section>\r\n  );\r\n}","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Company\\ViewCompany.js",["174"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { getCompanies } from '../../services/company';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nfunction ViewCompany() {\r\n  const [companies, setList] = useState([]);\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    getCompanies()\r\n      .then(items => {\r\n        if (mounted) {\r\n          setList(items)\r\n        }\r\n      })\r\n    return () => mounted = false;\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row col-md-12\">\r\n        <h2>Companies List</h2>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Phone</th>\r\n              <th>Address</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {companies.map(company => (\r\n              <tr key={company.Id}>\r\n                <td>{company.Name}</td>\r\n                <td>{company.Phone}</td>\r\n                <td>{company.Address}</td>\r\n                <td>\r\n                  {/*<Link className=\"btn btn-primary\">View</Link>*/}\r\n                  <Link className=\"btn btn-info\" to={`/company/edit/${company.Id}`}>Edit</Link>\r\n                  {/*<Link className=\"btn btn-secondary\">Delete</Link>*/}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ViewCompany;","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Company\\EditCompany.js",["175","176","177","178","179"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\r\nimport { getCompany, updateCompany } from '../../services/company';\r\nimport ViewCompany from './ViewCompany';\r\n\r\nfunction EditCompany({ setAlert }) {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [itemName, setItemName] = useState();\r\n    const [itemNumber, setItemNumber] = useState();\r\n    const [itemAddress, setItemAddress] = useState();\r\n\r\n    useEffect(() => {\r\n        getCompany(id)\r\n            .then(items => {\r\n                setItemName(items.Name);\r\n                setItemNumber(items.Phone);\r\n                setItemAddress(items.Address);\r\n            })\r\n    }, []);\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewCompany/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!itemName) {\r\n            alert('please enter name');\r\n            return;\r\n        }\r\n        updateCompany(id, { itemName, itemNumber, itemAddress });\r\n        history.push(\"/ViewCompany\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card card-primary\">\r\n                        <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">Edit Company Information</h3>\r\n                        </div>\r\n                        <form onSubmit={onSubmit}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputName\"> Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" placeholder=\"Enter Name\" name=\"name\" defaultValue={itemName}\r\n                                        onChange={event => setItemName(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Phone</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Enter Phone Number\" name=\"number\" defaultValue={itemNumber}\r\n                                        onChange={event => setItemNumber(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Address</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Enter Address\"\r\n                                        name=\"address\"\r\n                                        defaultValue={itemAddress}\r\n                                        onChange={event => setItemAddress(event.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditCompany;","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Rent\\AddRent.js",["180","181","182","183","184","185","186"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport { getCompanies } from '../../services/company';\r\nimport { getAvailableProducts } from '../../services/products';\r\nimport { addRent } from '../../services/rent';\r\n\r\nfunction AddRent({ setAlert }) {\r\n    const [company, setCompany] = useState([]);\r\n    const [product, setProduct] = useState([]);\r\n    const [selectedCompany, setSelectedCompany] = useState([]);\r\n    const [selectedProduct, setSelectedProduct] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        getAvailableProducts()\r\n            .then(items => {\r\n                if (mounted) {\r\n                    setProduct(items)\r\n                }\r\n            })\r\n        getCompanies()\r\n            .then(items => {\r\n                if (mounted) {\r\n                    setCompany(items)\r\n                }\r\n            })\r\n        return () => mounted = false;\r\n\r\n    }, [])\r\n\r\n    const handleChangeDevice = (e) => {\r\n        let { name, value } = e.target;\r\n        console.log('handleChangeDevice');\r\n        //console.log(name);\r\n        //console.log(value);\r\n\r\n        let index = e.target.selectedIndex;\r\n        let el = e.target.childNodes[index]\r\n        let id = el.getAttribute('id');\r\n        //console.log('Name, Code', e.target.value, option);\r\n\r\n        setSelectedProduct(id)\r\n        //this.setState({\r\n        //    [name]: value,\r\n        //});\r\n    }\r\n\r\n    const handleChangeCompany = (e) => {\r\n        let { name, value } = e.target;\r\n        console.log('handleChangeCompany');\r\n        //console.log(name);\r\n        //console.log(value);\r\n\r\n        let index = e.target.selectedIndex;\r\n        let el = e.target.childNodes[index]\r\n        let id = el.getAttribute('id');\r\n        //console.log('Name, Code', e.target.value, option);\r\n\r\n        setSelectedCompany(id)\r\n\r\n        //this.setState({\r\n        //    [name]: value,\r\n        //});\r\n    }\r\n\r\n    //Comment Added\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(selectedCompany);\r\n        console.log(selectedProduct);\r\n        if (selectedCompany.length == 0 || selectedProduct.length == 0) {\r\n            alert(\"Please select all fields\");\r\n            return;\r\n        }\r\n        addRent({ selectedCompany, selectedProduct });\r\n        history.push({\r\n            pathname: '/rent/index',\r\n            search: '?query=abc',\r\n            state: { alert: true }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card card-primary\">\r\n                        <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">New Lease</h3>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Device</label>\r\n                                    <select className=\"form-control select2\" style={{ 'width': '100%' }}\r\n                                        onChange={handleChangeDevice} >\r\n                                        <option value=\"0\" >Select Device</option>\r\n                                        {product.map(product => (<option id={product.Id}>{product.Name}</option>))}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Leased To</label>\r\n                                    <select className=\"form-control select2\" style={{ 'width': '100%' }}\r\n                                        onChange={handleChangeCompany}>\r\n                                        <option value=\"0\" >Select Company</option>\r\n                                        {company.map(cmp => (<option id={cmp.Id}>{cmp.Name}</option>))}\r\n                                    </select>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddRent;","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Company\\AddCompany.js",["187","188","189","190","191"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { addCompany } from '../../services/company';\r\nimport ViewCompany from './ViewCompany';\r\n\r\nfunction AddCompany({ setAlert }) {\r\n    const [company, setCompany] = useState({\r\n        name: \"\",\r\n        number: \"\",\r\n        address: \"\",\r\n    });\r\n    const onInputChange = e => {\r\n        setCompany({ ...company, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const { name, number, address } = company;\r\n    const history = useHistory();\r\n\r\n    //Comment Added\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewCompany/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!name) {\r\n            alert('please enter name');\r\n            return;\r\n        }\r\n        addCompany({ name, number, address });\r\n        history.push({\r\n            pathname: '/ViewCompany/',\r\n            search: '',\r\n            state: { alert: true }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card card-primary\">\r\n                        <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">Add Company</h3>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputName\"> Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" placeholder=\"Enter Name\"\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onChange={e => onInputChange(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Phone</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Enter Phone Number\"\r\n                                        name=\"number\"\r\n                                        value={number}\r\n                                        onChange={e => onInputChange(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Address</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Enter Address\"\r\n                                        name=\"address\"\r\n                                        value={address}\r\n                                        onChange={e => onInputChange(e)}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddCompany;","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Rent\\ViewRents.js",["192","193","194","195"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { getList } from '../../services/products';\r\nimport { Table } from 'react-bootstrap';\r\nimport { formatDate } from \"../../Utils\"\r\nimport { getRents, getRentsByLeaseStatus } from '../../services/rent';\r\n\r\nfunction ViewRents() {\r\n\r\n  const [rents, setRents] = useState([]);\r\n  useEffect(() => {\r\n    console.log('on loading');\r\n    let mounted = true;\r\n    getRents()\r\n      .then(items => {\r\n        if (mounted) {\r\n          setRents(items)\r\n        }\r\n      })\r\n    return () => mounted = false;\r\n  }, [])\r\n\r\n\r\n  const handleChangeStatus = (e) => {\r\n    console.log('handleChangeStatus');\r\n    let { name, value } = e.target;\r\n    //let index = e.target.selectedIndex;\r\n    //let element = e.target.childNodes[index]\r\n    //let id = element.getAttribute('id');\r\n    console.log(value);\r\n    if (value == 0)\r\n      return;\r\n    getRentsByLeaseStatus(value).then(items => {\r\n      setRents(items)\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n\r\n      <div className=\"row col-md-12\">\r\n        <h2>Devices Lease List</h2>\r\n\r\n        <hr />\r\n        <div>\r\n          <select className=\"select2 form-control\" style={{ 'width': '100%' }}\r\n            onChange={handleChangeStatus}>\r\n            <option value=\"0\">Select Filter</option>\r\n            <option value=\"1\">Leased</option>\r\n            <option value=\"2\">Available</option>\r\n            <option value=\"3\">All</option>\r\n          </select>\r\n        </div>\r\n\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Device</th>\r\n              <th>Company</th>\r\n              <th>Lease Date</th>\r\n              <th>Return Date</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rents.map(rent => (\r\n              <tr key={rent.Id}>\r\n                <td>{rent.Product}</td>\r\n                <td>{rent.Company}</td>\r\n                <td>{formatDate(rent.RentDT)}</td>\r\n                <td>{formatDate(rent.ReturnDT)}</td>\r\n                <td>\r\n                  <Link className=\"btn btn-primary\" to={`/rent/close/${rent.Id}`}>Close/Return</Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ViewRents;","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Rent\\CloseRent.js",["196"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { formatDate } from \"../../Utils\"\r\nimport { getRent, updateRent } from '../../services/rent';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nfunction CloseRent({ setAlert }) {\r\n\r\n    let { id } = useParams();\r\n    const [rent, setRent] = useState([]);\r\n    const [returnDT, setReturnDT] = useState(new Date());\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        getRent(id)\r\n            .then(items => {\r\n                if (mounted) {\r\n                    setRent(items);\r\n                    console.log(rent);\r\n                }\r\n            })\r\n        return () => mounted = false;\r\n\r\n    }, [])\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let dt = formatDate(returnDT)\r\n        console.log(dt);\r\n\r\n        updateRent(id, { dt });\r\n        history.push({\r\n            pathname: '/rent/index',\r\n            //search: '?query=abc',\r\n            state: { alert: true }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"card card-primary\">\r\n                        <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">Close Lease (Return Device)</h3>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Device Name</label>\r\n                                    <input type=\"text\" readOnly=\"true\" className=\"form-control\" value={rent.Product} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Leased To</label>\r\n                                    <input type=\"text\" readOnly=\"true\" className=\"form-control\" value={rent.Company} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Lease Date</label>\r\n                                    <input type=\"text\" readOnly=\"true\" className=\"form-control\" value={formatDate(rent.RentDT)} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Return Date</label>\r\n                                    <DatePicker className=\"form-control\" selected={returnDT} onChange={date => setReturnDT(date)} />\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CloseRent;","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\User\\AddUser.js",["197","198","199","200","201","202","203","204","205","206","207"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { addProduct, addUser } from '../../services/users';\r\nimport { getCompanies } from '../../services/company';\r\nimport ViewUsers from './ViewUsers';\r\n\r\nfunction AddUser({ setAlert }) {\r\n    const [company, setCompany] = useState([]);\r\n    const [itemFirstName, setItemFirstName] = useState(\"\");\r\n    const [itemLastName, setItemLastName] = useState(\"\");\r\n    const [itemUserame, setItemUsername] = useState(\"\");\r\n    const [itemPassword, setItemPassword] = useState(\"\");\r\n    const [itemPhone, setItemPhone] = useState(\"\");\r\n    const [itemEmail, setItemEmail] = useState(\"\");\r\n    const [selectedCompany, setSelectedCompany] = useState(0);\r\n    const [itemCreatedOn, setItemCreatedOn] = useState();\r\n    const [itemTemperatureUnit, setItemTemperatureUnit] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        setItemTemperatureUnit(\"C\");\r\n        getCompanies()\r\n            .then(items => {\r\n                if (mounted) {\r\n                    setCompany(items)\r\n                }\r\n            })\r\n        return () => mounted = false;\r\n\r\n    }, [])\r\n\r\n    const handleChangeCompany = (e) => {\r\n        let { name, value } = e.target;\r\n        console.log('handleChangeCompany');\r\n        //console.log(name);\r\n        //console.log(value);\r\n\r\n        let index = e.target.selectedIndex;\r\n        let el = e.target.childNodes[index]\r\n        let id = el.getAttribute('id');\r\n        //console.log('Name, Code', e.target.value, option);\r\n\r\n        setSelectedCompany(id)\r\n    }\r\n\r\n    const handleChangeTemperatureUnit = (e) => {\r\n        console.log('handleChangeTemperatureUnit');\r\n        let { name, value } = e.target;\r\n        console.log(value);\r\n        setItemTemperatureUnit(value);\r\n    }\r\n\r\n    //Comment Added\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewUsers/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        //console.log(selectedCompany);\r\n        if (!itemFirstName || !itemLastName || !itemUserame || !itemPassword || selectedCompany == 0) {\r\n            alert('please provide all information.');\r\n            return;\r\n        }\r\n        addUser({ itemFirstName, itemLastName, itemUserame, itemPassword, itemPhone, itemEmail, selectedCompany, itemCreatedOn, itemTemperatureUnit });\r\n        history.push({\r\n            pathname: '/ViewUsers/',\r\n            search: '',\r\n            state: { alert: true }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card card-primary\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Add User</h3>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputFirstName\">First Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputFirstName\" placeholder=\"First Name\" onChange={event => setItemFirstName(event.target.value)} value={itemFirstName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputLastName\">Last Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputLastName\" placeholder=\"Last Name\" onChange={event => setItemLastName(event.target.value)} value={itemLastName} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputUsername\">Username</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputUsername\" placeholder=\"Username\" onChange={event => setItemUsername(event.target.value)} value={itemUserame} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputEmail\">Password</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputPassword\" placeholder=\"Password\" type=\"password\" onChange={event => setItemPassword(event.target.value)} value={itemPassword} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputPhone\">Phone</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputPhone\" placeholder=\"Phone\" onChange={event => setItemPhone(event.target.value)} value={itemPhone} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputEmail\">Email</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail\" placeholder=\"Email\" onChange={event => setItemEmail(event.target.value)} value={itemEmail} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Company</label>\r\n                                    <select className=\"form-control select2\" style={{ 'width': '100%' }}\r\n                                        onChange={handleChangeCompany}>\r\n                                        <option value=\"0\" >Select Company</option>\r\n                                        {company.map(cmp => (<option id={cmp.Id}>{cmp.Name}</option>))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Temperature Unit</label>\r\n                                    <select className=\"form-control select2\" style={{ 'width': '100%' }}\r\n                                        onChange={handleChangeTemperatureUnit}>\r\n                                        <option value=\"C\">Celsius</option>\r\n                                        <option value=\"F\">Fahrenheit</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddUser;","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\User\\ViewUsers.js",["208"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { getList } from '../../services/users';\r\nimport { formatDate } from \"../../Utils\"\r\nimport { Table } from 'react-bootstrap';\r\nimport { getIsAdmin } from '../../Utils'\r\n\r\nfunction ViewUsers() {\r\n  const [users, setList] = useState([]);\r\n  useEffect(() => {\r\n    console.log('on loading');\r\n    let mounted = true;\r\n    let isAdmin = getIsAdmin();\r\n    getList(isAdmin)\r\n      .then(items => {\r\n        if (!isAdmin)\r\n        {\r\n          items = [ items ]\r\n        }\r\n        console.log(items);\r\n        if (mounted) {\r\n          setList(items)\r\n        }\r\n      })\r\n    return () => mounted = false;\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n\r\n      <div className=\"row col-md-12\">\r\n        <h2>Users List</h2>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n              <th>Phone</th>\r\n              <th>Email</th>\r\n              <th>Company</th>\r\n              <th>Created On</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map(user => (\r\n              <tr key={user.Id}>\r\n                <td>{user.FirstName}</td>\r\n                <td>{user.LastName}</td>\r\n                <td>{user.Username}</td>\r\n                <td>{user.Phone}</td>\r\n                <td>{user.Email}</td>\r\n                <td>{user.Company}</td>\r\n                <td>{formatDate(user.DT)}</td>\r\n                <td>\r\n                  {/*<Link className=\"btn btn-primary\">View</Link>*/}\r\n                  <Link className=\"btn btn-info\" to={`/user/edit/${user.Id}`}>Edit</Link>\r\n                  {/*<Link className=\"btn btn-secondary\">Delete</Link>*/}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ViewUsers;","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\User\\EditUser.js",["209","210","211","212","213","214","215","216","217","218","219"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\r\nimport { getUser, updateUser } from '../../services/users';\r\nimport { getCompanies } from '../../services/company';\r\nimport ViewProducts from './ViewUsers';\r\n\r\n\r\nfunction EditProduct({ setAlert }) {\r\n    const { id } = useParams();\r\n    const [company, setCompany] = useState([]);\r\n    const [itemFirstName, setItemFirstName] = useState('');\r\n    const [itemLastName, setItemLastName] = useState('');\r\n    const [itemUserame, setItemUsername] = useState('');\r\n    const [itemPassword, setItemPassword] = useState('');\r\n    const [itemPhone, setItemPhone] = useState('');\r\n    const [itemEmail, setItemEmail] = useState();\r\n    const [itemCompany, setItemCompany] = useState('');\r\n    const [itemTemperatureUnit, setItemTemperatureUnit] = useState('');\r\n    var selectedCompanyId = \"0\";\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getCompanies()\r\n            .then(items => {\r\n                setCompany(items)\r\n            });\r\n\r\n        getUser(id)            \r\n            .then(items => {\r\n                //console.log(items);\r\n                setItemFirstName(items.FirstName);\r\n                setItemLastName(items.LastName);\r\n                setItemUsername(items.Username);\r\n                setItemPassword(items.Password);\r\n                setItemPhone(items.Phone);\r\n                setItemEmail(items.Email);\r\n                setItemCompany(items.CompanyId);\r\n                setItemTemperatureUnit(items.TemperatureUnit);\r\n                selectedCompanyId = items.CompanyId;\r\n                console.log(items.CompanyId);\r\n                console.log(itemCompany);\r\n                console.log(selectedCompanyId);\r\n            });\r\n\r\n    }, []);\r\n\r\n    const handleChangeCompany = (e) => {\r\n        let { name, value } = e.target;\r\n        console.log('handleChangeCompany');\r\n        //console.log(name);\r\n        //console.log(value);\r\n\r\n        let index = e.target.selectedIndex;\r\n        let el = e.target.childNodes[index]\r\n        let id = el.getAttribute('id');\r\n        console.log('Name, Value', e.target.value, id);\r\n\r\n        setItemCompany(id)\r\n    }\r\n\r\n    const handleChangeTemperatureUnit = (e) => {\r\n        console.log('handleChangeTemperatureUnit');\r\n        let { name, value } = e.target;\r\n        console.log(value);\r\n        setItemTemperatureUnit(value);\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewUsers/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!itemFirstName || !itemLastName || !itemUserame || !itemPassword || itemCompany == 0) {\r\n            alert('please provide all information.');\r\n            return;\r\n        }\r\n        updateUser(id, { itemFirstName, itemLastName, itemPassword, itemPhone, itemEmail, itemCompany, itemTemperatureUnit });\r\n        //alert(itemTemperatureUnit);\r\n        sessionStorage.setItem('temperatureUnit', itemTemperatureUnit);\r\n        history.push(\"/ViewUsers\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card card-primary\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Edit Device Information</h3>\r\n                        </div>\r\n                        <form onSubmit={e => onSubmit(e)}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputName\">First Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputId\" type=\"hidden\" value={id} />\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" placeholder=\"First Name\" name=\"firstname\" defaultValue={itemFirstName}\r\n                                        onChange={event => setItemFirstName(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Last Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Last Name\" name=\"lastname\" defaultValue={itemLastName}\r\n                                        onChange={event => setItemLastName(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputUsername\">Username</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputUsername\" readOnly placeholder=\"Username\" \r\n                                        name=\"username\" defaultValue={itemUserame} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputPassword\">Password</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputPassword\" placeholder=\"Password\" type=\"password\" \r\n                                        onChange={event => setItemPassword(event.target.value)} defaultValue={itemPassword} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputPhone\">Phone</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputPhone\" placeholder=\"Phone\" \r\n                                        onChange={event => setItemPhone(event.target.value)} defaultValue={itemPhone} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputEmail\">Email</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail\" placeholder=\"Email\" \r\n                                        onChange={event => setItemEmail(event.target.value)} defaultValue={itemEmail} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Company</label>\r\n                                    <select className=\"form-control select2\" style={{ 'width': '100%' }} \r\n                                        value={selectedCompanyId}\r\n                                        onChange={handleChangeCompany}>\r\n                                        <option value=\"0\" >Select Company</option>\r\n                                        {company.map(cmp => (<option value={cmp.Id}>{cmp.Name}</option>))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Temperature Unit</label>\r\n                                    <select className=\"form-control select2\" style={{ 'width': '100%' }} \r\n                                        value={itemTemperatureUnit}\r\n                                        onChange={handleChangeTemperatureUnit}>\r\n                                        <option value=\"C\">Celsius</option>\r\n                                        <option value=\"F\">Fahrenheit</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditProduct;","D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Product\\Data.js",["220","221","222","223","224","225","226","227","228","229","230","231"],"D:\\nodejsprojects\\react_crm\\basic_app\\src\\Utils.js",[],"D:\\nodejsprojects\\react_crm\\basic_app\\src\\services\\rent.js",[],"D:\\nodejsprojects\\react_crm\\basic_app\\src\\services\\company.js",[],"D:\\nodejsprojects\\react_crm\\basic_app\\src\\services\\products.js",["232"],"import { getIsAdmin, getLoggedInUserId } from '../Utils'\r\n\r\nexport function getList() {\r\n  //console.log('getList()');\r\n  var isAdmin = getIsAdmin();\r\n  if (isAdmin == 1) {\r\n    console.log('(isAdmin === 1)');\r\n    return fetch(`${process.env.REACT_APP_API_BASE_URL}/products`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }).then(data => data.json())\r\n  }\r\n  else {\r\n    var id = getLoggedInUserId();\r\n    return fetch(`${process.env.REACT_APP_API_BASE_URL}/products_by_user/` + id,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }).then(data => data.json())\r\n  }\r\n\r\n}\r\n\r\nexport function getAvailableProducts() {\r\n  //console.log('getList()');\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/get_available_products`,\r\n    {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(data => data.json())\r\n}\r\n\r\nexport function getProduct(id) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/products/` + id, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then(data => data.json())\r\n}\r\n\r\nexport function updateProduct(id, item) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/products/` + id, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ item })\r\n  })\r\n    .then(data => data.json())\r\n}\r\n\r\nexport function updateProductSetRule(id, item) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/update_product_set_rule/` + id, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ item })\r\n  }).then(data => data.json())\r\n}\r\n\r\nexport function addProduct(item) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/products`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ item })\r\n  }).then(data => data.json())\r\n}\r\n\r\nexport function updateList(item) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/products`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ item })\r\n  })\r\n    .then(data => data.json())\r\n}\r\n\r\nexport function getProductData(id) {\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/product_data/` + id, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then(data => data.json())\r\n}\r\n\r\nexport function getProductDataByDate(id, startDate, endDate) {\r\n  console.log('getProductDataByDate');\r\n  console.log(startDate);\r\n  console.log(endDate);\r\n  return fetch(`${process.env.REACT_APP_API_BASE_URL}/product_data/` + id + `/${startDate}/${endDate}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then(data => data.json())\r\n}","D:\\nodejsprojects\\react_crm\\basic_app\\src\\services\\users.js",[],"D:\\nodejsprojects\\react_crm\\basic_app\\src\\views\\Product\\SetRule.js",["233","234","235","236","237","238"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\r\nimport { getProduct, updateProductSetRule } from '../../services/products';\r\nimport ViewProducts from './ViewProducts';\r\nimport { convertCToF, convertFToC, getTemperatureUnit } from '../../Utils'\r\n\r\nfunction SetRule({ setAlert }) {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [itemName, setItemName] = useState();\r\n    const [itemDescription, setItemDescription] = useState();\r\n    const [itemSKU, setItemSKU] = useState();\r\n    var [itemMinThreshold, setItemMinThreshold] = useState();\r\n    var [itemMaxThreshold, setItemMaxThreshold] = useState();\r\n    const [itemThresholdInterval, setItemThresholdInterval] = useState();\r\n    useEffect(() => {\r\n        getProduct(id)\r\n            .then(items => {\r\n                setItemName(items.Name);\r\n                setItemDescription(items.Description);\r\n                setItemSKU(items.SKU);\r\n                if (getTemperatureUnit() === 'F') {\r\n                    setItemMinThreshold(convertCToF(items.MinThreshold));\r\n                    setItemMaxThreshold(convertCToF(items.MaxThreshold));\r\n                }\r\n                else {\r\n                    setItemMinThreshold(items.MinThreshold);\r\n                    setItemMaxThreshold(items.MaxThreshold);\r\n                }\r\n                setItemThresholdInterval(items.MaxThresholdIntervalInSeconds);\r\n            })\r\n    }, []);\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (e.nativeEvent.submitter.name == \"cancel\") {\r\n            history.push({\r\n                pathname: '/ViewProducts/',\r\n                search: '',\r\n                state: { alert: true }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!itemMinThreshold) {\r\n            alert('please set minimum threshold value');\r\n            return;\r\n        }\r\n        if (!itemMaxThreshold) {\r\n            alert('please set maximum threshold value');\r\n            return;\r\n        }\r\n\r\n\r\n        if (getTemperatureUnit() === 'F') {\r\n            itemMinThreshold = convertFToC(itemMinThreshold);\r\n            itemMaxThreshold = convertFToC(itemMaxThreshold);\r\n        }\r\n        updateProductSetRule(id, { itemMinThreshold, itemMaxThreshold, itemThresholdInterval });\r\n\r\n        history.push(\"/ViewProducts\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card card-primary\">\r\n                        <div className=\"card-header\">\r\n                            <h3 class=\"card-title\">Set Rule for Alert</h3>\r\n                        </div>\r\n                        <form onSubmit={e => onSubmit(e)}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputName\">Device Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputId\" type=\"hidden\" value={id} />\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputName\" placeholder=\"Enter Name\" name=\"name\" defaultValue={itemName} readOnly=\"true\"\r\n                                        onChange={event => setItemName(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputCode\">Description</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputCode\" placeholder=\"Description\" name=\"description\" defaultValue={itemDescription} readOnly=\"true\"\r\n                                        onChange={event => setItemDescription(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputSKU\">Hardware Serial No.</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleInputSKU\" placeholder=\"Hardware Serial Number\" name=\"sku\" defaultValue={itemSKU} readOnly=\"true\"\r\n                                        onChange={event => setItemSKU(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputSKU\">Min Temperature Threshold (°{getTemperatureUnit()})</label>\r\n                                    <input type=\"number\" step=\"any\" className=\"form-control\" id=\"exampleInputMinThreshold\" placeholder=\"Min Temperature Threshold\" name=\"threshold\" defaultValue={itemMinThreshold}\r\n                                        onChange={event => setItemMinThreshold(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputSKU\">Max Temperature Threshold (°{getTemperatureUnit()})</label>\r\n                                    <input type=\"number\" step=\"any\" className=\"form-control\" id=\"exampleInputMaxThreshold\" placeholder=\"Max Temperature Threshold\" name=\"threshold\" defaultValue={itemMaxThreshold}\r\n                                        onChange={event => setItemMaxThreshold(event.target.value)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"exampleInputSKU\">Max Threshold Interval (seconds)</label>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"exampleInputThresholdInterval\" placeholder=\"Max Threshold Interval (seconds)\" name=\"thresholdinterval\" defaultValue={itemThresholdInterval}\r\n                                        onChange={event => setItemThresholdInterval(event.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <button type=\"submit\" name=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                                <button type=\"submit\" name=\"cancel\" className=\"btn btn-info\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SetRule;",{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":8,"column":3,"nodeType":"245","messageId":"246","endLine":10,"endColumn":4},{"ruleId":"247","severity":1,"message":"248","line":84,"column":74,"nodeType":"249","messageId":"246","endLine":84,"endColumn":76},{"ruleId":"247","severity":1,"message":"248","line":99,"column":81,"nodeType":"249","messageId":"246","endLine":99,"endColumn":83},{"ruleId":"247","severity":1,"message":"248","line":123,"column":81,"nodeType":"249","messageId":"246","endLine":123,"endColumn":83},{"ruleId":"247","severity":1,"message":"248","line":156,"column":74,"nodeType":"249","messageId":"246","endLine":156,"endColumn":76},{"ruleId":"250","severity":1,"message":"251","line":47,"column":71,"nodeType":"252","endLine":49,"endColumn":15},{"ruleId":"253","severity":1,"message":"254","line":11,"column":11,"nodeType":"255","endLine":11,"endColumn":81},{"ruleId":"253","severity":1,"message":"254","line":17,"column":11,"nodeType":"255","endLine":17,"endColumn":44},{"ruleId":"253","severity":1,"message":"254","line":34,"column":11,"nodeType":"255","endLine":34,"endColumn":83},{"ruleId":"253","severity":1,"message":"254","line":39,"column":11,"nodeType":"255","endLine":39,"endColumn":106},{"ruleId":"256","severity":1,"message":"257","line":5,"column":10,"nodeType":"258","messageId":"259","endLine":5,"endColumn":18},{"ruleId":"256","severity":1,"message":"260","line":5,"column":20,"nodeType":"258","messageId":"259","endLine":5,"endColumn":30},{"ruleId":"256","severity":1,"message":"261","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":27},{"ruleId":"247","severity":1,"message":"248","line":45,"column":127,"nodeType":"249","messageId":"246","endLine":45,"endColumn":129},{"ruleId":"256","severity":1,"message":"262","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":26},{"ruleId":"256","severity":1,"message":"263","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"256","severity":1,"message":"257","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":24},{"ruleId":"256","severity":1,"message":"264","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":16,"column":42,"nodeType":"249","messageId":"246","endLine":16,"endColumn":44},{"ruleId":"256","severity":1,"message":"263","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"256","severity":1,"message":"257","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":24},{"ruleId":"256","severity":1,"message":"265","line":3,"column":22,"nodeType":"258","messageId":"259","endLine":3,"endColumn":32},{"ruleId":"256","severity":1,"message":"264","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":21,"column":8,"nodeType":"268","endLine":21,"endColumn":10,"suggestions":"269"},{"ruleId":"247","severity":1,"message":"248","line":25,"column":42,"nodeType":"249","messageId":"246","endLine":25,"endColumn":44},{"ruleId":"270","severity":1,"message":"271","line":54,"column":101,"nodeType":"272","endLine":54,"endColumn":114},{"ruleId":"253","severity":1,"message":"254","line":18,"column":15,"nodeType":"255","endLine":18,"endColumn":56},{"ruleId":"253","severity":1,"message":"254","line":31,"column":15,"nodeType":"255","endLine":31,"endColumn":56},{"ruleId":"253","severity":1,"message":"254","line":43,"column":15,"nodeType":"255","endLine":43,"endColumn":56},{"ruleId":"253","severity":1,"message":"254","line":55,"column":15,"nodeType":"255","endLine":55,"endColumn":56},{"ruleId":"256","severity":1,"message":"261","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":27},{"ruleId":"256","severity":1,"message":"263","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"256","severity":1,"message":"257","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":24},{"ruleId":"256","severity":1,"message":"273","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":19},{"ruleId":"266","severity":1,"message":"267","line":20,"column":8,"nodeType":"268","endLine":20,"endColumn":10,"suggestions":"274"},{"ruleId":"247","severity":1,"message":"248","line":24,"column":42,"nodeType":"249","messageId":"246","endLine":24,"endColumn":44},{"ruleId":"256","severity":1,"message":"275","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":13},{"ruleId":"256","severity":1,"message":"276","line":35,"column":15,"nodeType":"258","messageId":"259","endLine":35,"endColumn":19},{"ruleId":"256","severity":1,"message":"277","line":35,"column":21,"nodeType":"258","messageId":"259","endLine":35,"endColumn":26},{"ruleId":"256","severity":1,"message":"276","line":52,"column":15,"nodeType":"258","messageId":"259","endLine":52,"endColumn":19},{"ruleId":"256","severity":1,"message":"277","line":52,"column":21,"nodeType":"258","messageId":"259","endLine":52,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":75,"column":36,"nodeType":"249","messageId":"246","endLine":75,"endColumn":38},{"ruleId":"247","severity":1,"message":"248","line":75,"column":67,"nodeType":"249","messageId":"246","endLine":75,"endColumn":69},{"ruleId":"256","severity":1,"message":"262","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":26},{"ruleId":"256","severity":1,"message":"263","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"256","severity":1,"message":"257","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":24},{"ruleId":"256","severity":1,"message":"273","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":19},{"ruleId":"247","severity":1,"message":"248","line":22,"column":42,"nodeType":"249","messageId":"246","endLine":22,"endColumn":44},{"ruleId":"256","severity":1,"message":"261","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":27},{"ruleId":"256","severity":1,"message":"278","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":17},{"ruleId":"256","severity":1,"message":"276","line":26,"column":11,"nodeType":"258","messageId":"259","endLine":26,"endColumn":15},{"ruleId":"247","severity":1,"message":"248","line":31,"column":15,"nodeType":"249","messageId":"246","endLine":31,"endColumn":17},{"ruleId":"266","severity":1,"message":"279","line":29,"column":8,"nodeType":"268","endLine":29,"endColumn":10,"suggestions":"280"},{"ruleId":"256","severity":1,"message":"263","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"256","severity":1,"message":"257","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":24},{"ruleId":"256","severity":1,"message":"281","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":20},{"ruleId":"256","severity":1,"message":"282","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":17},{"ruleId":"256","severity":1,"message":"283","line":16,"column":27,"nodeType":"258","messageId":"259","endLine":16,"endColumn":43},{"ruleId":"256","severity":1,"message":"276","line":34,"column":15,"nodeType":"258","messageId":"259","endLine":34,"endColumn":19},{"ruleId":"256","severity":1,"message":"277","line":34,"column":21,"nodeType":"258","messageId":"259","endLine":34,"endColumn":26},{"ruleId":"256","severity":1,"message":"276","line":49,"column":15,"nodeType":"258","messageId":"259","endLine":49,"endColumn":19},{"ruleId":"247","severity":1,"message":"248","line":57,"column":42,"nodeType":"249","messageId":"246","endLine":57,"endColumn":44},{"ruleId":"247","severity":1,"message":"248","line":67,"column":97,"nodeType":"249","messageId":"246","endLine":67,"endColumn":99},{"ruleId":"270","severity":1,"message":"271","line":103,"column":130,"nodeType":"272","endLine":103,"endColumn":145},{"ruleId":"256","severity":1,"message":"261","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":27},{"ruleId":"256","severity":1,"message":"263","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"256","severity":1,"message":"257","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":24},{"ruleId":"256","severity":1,"message":"264","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":20},{"ruleId":"266","severity":1,"message":"284","line":41,"column":37,"nodeType":"285","endLine":41,"endColumn":52},{"ruleId":"256","severity":1,"message":"276","line":50,"column":15,"nodeType":"258","messageId":"259","endLine":50,"endColumn":19},{"ruleId":"256","severity":1,"message":"277","line":50,"column":21,"nodeType":"258","messageId":"259","endLine":50,"endColumn":26},{"ruleId":"256","severity":1,"message":"276","line":65,"column":15,"nodeType":"258","messageId":"259","endLine":65,"endColumn":19},{"ruleId":"247","severity":1,"message":"248","line":72,"column":42,"nodeType":"249","messageId":"246","endLine":72,"endColumn":44},{"ruleId":"247","severity":1,"message":"248","line":81,"column":93,"nodeType":"249","messageId":"246","endLine":81,"endColumn":95},{"ruleId":"270","severity":1,"message":"271","line":103,"column":101,"nodeType":"272","endLine":103,"endColumn":114},{"ruleId":"270","severity":1,"message":"271","line":119,"column":130,"nodeType":"272","endLine":119,"endColumn":145},{"ruleId":"256","severity":1,"message":"263","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"256","severity":1,"message":"257","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":24},{"ruleId":"256","severity":1,"message":"260","line":2,"column":26,"nodeType":"258","messageId":"259","endLine":2,"endColumn":36},{"ruleId":"256","severity":1,"message":"286","line":4,"column":22,"nodeType":"258","messageId":"259","endLine":4,"endColumn":36},{"ruleId":"256","severity":1,"message":"287","line":7,"column":10,"nodeType":"258","messageId":"259","endLine":7,"endColumn":14},{"ruleId":"256","severity":1,"message":"288","line":7,"column":16,"nodeType":"258","messageId":"259","endLine":7,"endColumn":19},{"ruleId":"256","severity":1,"message":"289","line":9,"column":8,"nodeType":"258","messageId":"259","endLine":9,"endColumn":14},{"ruleId":"256","severity":1,"message":"290","line":10,"column":8,"nodeType":"258","messageId":"259","endLine":10,"endColumn":9},{"ruleId":"266","severity":1,"message":"291","line":77,"column":8,"nodeType":"268","endLine":77,"endColumn":10,"suggestions":"292"},{"ruleId":"256","severity":1,"message":"293","line":96,"column":14,"nodeType":"258","messageId":"259","endLine":96,"endColumn":26},{"ruleId":"256","severity":1,"message":"294","line":192,"column":5,"nodeType":"258","messageId":"259","endLine":192,"endColumn":11},{"ruleId":"256","severity":1,"message":"295","line":207,"column":9,"nodeType":"258","messageId":"259","endLine":207,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":6,"column":15,"nodeType":"249","messageId":"246","endLine":6,"endColumn":17},{"ruleId":"256","severity":1,"message":"263","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"256","severity":1,"message":"257","line":2,"column":16,"nodeType":"258","messageId":"259","endLine":2,"endColumn":24},{"ruleId":"256","severity":1,"message":"264","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":32,"column":8,"nodeType":"268","endLine":32,"endColumn":10,"suggestions":"296"},{"ruleId":"247","severity":1,"message":"248","line":36,"column":42,"nodeType":"249","messageId":"246","endLine":36,"endColumn":44},{"ruleId":"270","severity":1,"message":"271","line":76,"column":101,"nodeType":"272","endLine":76,"endColumn":114},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],"no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'ViewProducts' is defined but never used.","'updateList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["299"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ViewCompany' is defined but never used.",["300"],"'Toast' is defined but never used.","'name' is assigned a value but never used.","'value' is assigned a value but never used.","'getList' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'rent'. Either include them or remove the dependency array.",["301"],"'addProduct' is defined but never used.","'ViewUsers' is defined but never used.","'setItemCreatedOn' is assigned a value but never used.","Assignments to the 'selectedCompanyId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'getProductData' is defined but never used.","'Line' is defined but never used.","'Bar' is defined but never used.","'moment' is defined but never used.","'$' is defined but never used.","React Hook useEffect has missing dependencies: 'chartData', 'chartDataAverage', 'chartTimeseriesData', 'endDate', 'id', 'loadChartData', and 'startDate'. Either include them or remove the dependency array.",["302"],"'handleSelect' is defined but never used.","'MONTHS' is assigned a value but never used.","'divstatus' is assigned a value but never used.",["303"],"no-global-assign","no-unsafe-negation",{"desc":"304","fix":"305"},{"desc":"304","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"304","fix":"311"},"Update the dependencies array to be: [id]",{"range":"312","text":"313"},{"range":"314","text":"313"},"Update the dependencies array to be: [id, rent]",{"range":"315","text":"316"},"Update the dependencies array to be: [chartData, chartDataAverage, chartTimeseriesData, endDate, id, loadChartData, startDate]",{"range":"317","text":"318"},{"range":"319","text":"313"},[767,769],"[id]",[741,743],[823,825],"[id, rent]",[2482,2484],"[chartData, chartDataAverage, chartTimeseriesData, endDate, id, loadChartData, startDate]",[1496,1498]]